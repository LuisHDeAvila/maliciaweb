[
	{
		"pattern_id": "1",
		"pattern": "Password Strength Meter",
		"pattern_header": "\n    You want to make sure your users' passwords are sufficiently strong in order to prevent malicious attacks.\n    ",
		"pattern_usage": "\n\tUse when you want your users to choose passwords for their user accounts that are hard to break or guess by either human or computerized help.\n\tUse when you want to increase the complexity of your users’ passwords and raise the barrier for attackers tampering with your system.\n\tUse when you want to be sure that your users know what a good password is and that their chosen password follows such guidelines.\n",
		"description": "You want to make sure your users' passwords are sufficiently strong in order to prevent malicious attacks.A password’s strength is measured according to predefined rules and is displayed using a horizontal scale next to the input field. If the password is weak then only a small portion of the horizontal bar is highlighted. The greater the strength of the password the more the horizontal bar is highlighted.The password strength is also appropriately indicated by coloring the bar in a color associative with good or bad: Green indicating a strong password and red indicating a weak password.The definition of a strong password can be intensely argued. A forced complex password at first glance only spells increased security, but forcing too complex and rigid rules on password can have the opposite effect. As passwords are forced to be complex, they also become increasingly harder to remember by the user. This occasionally leads to a self-destruction of the increased security, as some users simply write it down on a small sticky note and paste it up on their screen in order to remember their new complex password. This is especially a problem in places with the policy of forced password renewal every 3 months.With the above mentioned in mind, I should stress that a sufficiently strong password does not necessarily need to fulfill all of the rules below, but merely a few will do. Consider the following rules, for each rules followed add a point to the passwords strength level (so that 0 points is the weakest, and 5 is the strongest). UI-patterns.com defines a strong password when it…:This would result in 6 levels of password strength depending on how many of the above mentioned criteria are being met.While the above mentioned password check can easily be done using only client-side javascript, it does not prevent against dictionary attacks. To ease the memorization of passwords, people tend to use real words as passwords and merely substitute characters with numbers or special characters. An example of such a password could be “P@ssw0rd”, which really isn’t a strong password. Modern password breaking software is fairly good at guessing such number/letter substitutions. To check against such strength, you would need to do ajax calls that would check with your own dictionary if the password was strong or not.You need to determine the password strength and complexity according to what you want to protect. You need to draw the line somewhere. For 99% of the content out there it can easily be argued that merely the first 2 or 3 rules mentioned above will be sufficient.By showing a password strength meter beside the password field, the user is forced to consider using a password with an appropriate strength. By putting a minimum level of password strength you can even use the password strength meter to force a heightened security to your website.Using a password strength indicator on the website, adds another level of security is added to the site.  This not only makes the current users of the site feel more secure, but potential clients might use this as a requisite when deciding to conduct business with a company.",
		"url": "https://ui-patterns.com/patterns/PasswordStrengthMeter"
	},
	{
		"pattern_id": "2",
		"pattern": "Structured Format",
		"pattern_header": "\n    The user needs to quickly enter data into the system but the format of the data must adhere to a predefined structure.\n    ",
		"pattern_usage": "\n\tUse when the more explicit form elements like select boxes, radio buttons, and checkboxes make entering data for everyday tasks a too complicated process\n\tUse when the time it takes to complete a task proportional exceeds the importance of the goal the user wants to accomplish.\n\tUse when the  input you want to collect is a specific data type. For instance a zip code, a date or time, a phone number.\n\tUse when the expected user input follows a specific format which can readily be interpreted by a computer program.\n\tDo not use for inputs that can possibly be interpreted in many ways. For this purpose, see the Forgiving Format pattern.\n",
		"description": "The user needs to quickly enter data into the system but the format of the data must adhere to a predefined structure.A collection of 60 User Interface design patterns, presented in a manner easily referenced and used as a brainstorming tool.Represent input fields in a way that clearly guides or limits the user as to what input format to use.An input field is presented with an accompanying label describing the input that is expected in the field. The label describes a specific structure the user must follow to input a valid value.In some cases the user is presented with the possibility to use helping mechanisms such as a date selection calendar to fill out the input box in the correct way. When the user has done this multiple times, they slowly learn how the input is formatted, so that they can copy the same format on their own.Set clear expectations by ordering input fields in a Structured Format: clue users as to what kind of input is being requested. By chunking large input fields into smaller bits, data entry errors can be decreased dramatically. It is easier to transcribe or memorize a long number when it is broken up into chunks. Where the Structured Format is well suited for predictable input, the Forgiving Format is well suited for open-ended input.Using a structured format in an input field saves time for the user, when they are required to fill out the same input field repeatedly as a part of a frequent task. The structured data pattern aids the user through streamlined and controlled inputs, which in turn speeds up data capturing tasks and reduces the garbage in, garbage out problem.",
		"url": "https://ui-patterns.com/patterns/StructuredFormat"
	},
	{
		"pattern_id": "3",
		"pattern": "Captcha",
		"pattern_header": "\n    The application needs to verify that the data submitted originates from an actual human and not a robot.\n    ",
		"pattern_usage": "\n\tUse when your web application experiences attacks from malicious web-robots trying to post spam-content on your site\n\tUse to protect your website from automated robots\n\tUse when the capability to post content to your website is not blocked by the need to be logged in. Registration processes are included.\n",
		"description": "The application needs to verify that the data submitted originates from an actual human and not a robot.Websites featuring the ability for visitors to comment, register as a user, or otherwise actively post content on the website are often exposed to attacks from spam-robots. The content posted by such spam-robots can be compared to spam sent by e-mail. The main purpose of spam-robots on the web is to create and spread links to a specific website, in order to increase the websites search rating on search engines like google.com. These spam-posts rarely have anything to do with the subject of the website, hence the spam categorization.To avoid such spam, captchas are introduced. The whole idea behind Captchas is to create a way to distinguish real human beings from automated robots.The most popular form of Captchas are images that represent letters and numbers inside. The user is prompted to write in a separate form field what the image reads in a separate form field. To prevent spammers from using OCR software to read the image, the image is manipulated in different ways, which makes it hard for computers while maintaining readability for humans.If the user succeeds in typing what the image says, his content is posted to the website. If not, the action will be refused. It is common to allow a number of tries to enter the captcha text, as some captcha images are even unreadable to humans due to the strong image manipulation is has been exposed to.Captchas are short for ‘Completely Automated Public Turing test to tell Computers and Humans Apart’. The whole idea behind Captchas is to distinguish humans from computers letting the user perform an action a computer can’t. A captcha is a simple Turing test.There is a fine line between making a captcha unrecognizable for OCR scanners and still readable for human beings. Readability for the human has to come first. Other problems with implementing captchas to protect your website include a lock-out from visually impaired users as they can’t use voice software to speak what the captcha reads.Other forms of protection from malicious spammers are asking questions like “what is 2 + 3” or “what is two plus three” or using voice captchas,",
		"url": "https://ui-patterns.com/patterns/Captcha"
	},
	{
		"pattern_id": "4",
		"pattern": "Keyboard Shortcuts",
		"pattern_header": "\n    The user wants to perform repetitive tasks faster\n    ",
		"pattern_usage": "\n\tUse when your application contains repetitive tasks that involves switching modes from keyboard to mouse.\n",
		"description": "\n  Alternate titles:\n  Command Shortcurt.\nThe user wants to perform repetitive tasks faster▲ Information about available keyboard shortcuts for the Dropbox.com online web interface is displayed by pressing "?".A collection of 60 User Interface design patterns, presented in a manner easily referenced and used as a brainstorming tool.Allow users to trigger actions faster with keyboard commands.Typically keyboard shortcuts are made for commands that are part of frequent or repetitive user tasks.When adding shortcuts to your application, keep away from using existing system shortcuts or shortcuts that already used elsewhere in another context in the same application. Avoid repurposing shortcuts that users have already adapted into their workflow1.You might want to consider adding keyboard shortcut information to menu items and button and icon tooltips, if available.Ease access to repetitive tasks by providing skilled users with keyboard shortcuts to their associated actions. Reduce the total time spent, the steps needed, and mental energy wasted to complete a task without making it harder on novice users.Keyboard shortcuts accelerate exposition of program function to users through keypresses rather than mouse clicks. This can greatly help speed up task completion time as the user does not need to switch modes from using they keyboard to the mouse; hands can stay on the keyboard1.Assist user recall memory by creating mnemonic associations with letters used in key combinations. However, as there are only so many keys available, a common strategy is to use the middle or end letter of a function rather than the initial letter.On Macs, O is used for “Open File” while L is used for “Open Location”.Finally, placing keys of command pairs close to each other, even though there is no mnemonic association can make sense as well. C is often used for “Copy” while V is used for Paste.1 Keyboard Shortcuts at the Atlassian Design library.",
		"url": "https://ui-patterns.com/patterns/keyboard-shortcuts"
	},
	{
		"pattern_id": "5",
		"pattern": "Rule Builder",
		"pattern_header": "\n    The user needs to, often repeatedly, conduct a search query based on a custom set of rules
\n
\n\n    ",
	"pattern_usage": "\n\tUse to build a search query based on several conditions\n\tUse to save a segment rather than static selection\n\tUse to help users build dynamic lists, making the selected rules static rather than the actual search result\n\tUse when a search query involves an unknown number of undefined conditions\n\tDo not use when users can find what they need using only a text input.\n\tDo not use when the type of search query requires the same types of variables to be chosen every single time.\n",
		"description": "\n  Alternate titles:\n  Query Builder, Smart Filter, Segment Builder.\nThe user needs to, often repeatedly, conduct a search query based on a custom set of rules
\n
\n▲ An example of binding a remove rule button to each rule and of providing an input for setting the matching criteria for the rules
\nLet the user build a dynamic list of rules to narrow down matching results from a dataset. Each rule is represented by a separate line or box and divided from each other vertically.The user must specify whether a rule is needed (AND) or is optional (OR). A common approach to simplify the implementation of this pattern is to provide an option to choose whether all rules chosen should be matched – or just any of the rules.A more nuanced approach is to allow each rule to be a required match or just an optional match.As the user choses the kind of rule he or she wants to impose, those rules can have very different impacts on what corresponding data needs to be entered for the rule to give meaning.This is why many rule builders provide smart mini-forms that vary depending on what kind of rule is selected. One rule might impose a text search, wherein options like “contains”, “does not contain”, “matches”, or “do not match” make sense. Other rules could be to select an option from a dynamic list or to provide numeric- or range inputs.The smartest feature rule builders provide is to dynamically add and remove rules.The “Add” button is typically located either directly under the rules and remains so as new rules are added or removed, or it located alongside the remove rule button. In the case of the latter, this allows for new rules to be inserted directly beneath a desired rule.Removing a rule is most often allowed at the beginning or end of the line the rule is presented on.A rule builder allows a user to specify unique conditions to discover and group items across one or more datasets.The results returned by an active rule can be dynamic in nature as its related datasets change over time. An active rule can trigger a set of actions to be performed when the conditions, criteria and values of the rule are met. Rules sets can be grouped into discrete units and linked together with condition logic to create highly complex rule conditions.1 UI design for rule builder by Two Rivers Consulting2 Interesting StackExchange discussion",
	"url": "https://ui-patterns.com/patterns/rule-builder"
	},
	{
		"pattern_id": "6",
		"pattern": "Inplace Editor",
		"pattern_header": "\n    The user needs to quickly and easily edit a value on a page\n    ",
		"pattern_usage": "\n\tUse when the user only needs to edit one value (or very few) and not many\n\tUse when the value the user needs to edit is of a simple format, i.e. a text string, in a dropdown box.\n\tUse if you want the user to be able to edit a value without actually going to an administration page, but by staying on the same page.\n",
		"description": "\n  Alternate titles:\n  Direct Manipulation.\nThe user needs to quickly and easily edit a value on a pageA collection of 60 User Interface design patterns, presented in a manner easily referenced and used as a brainstorming tool.Let users edit values in the same place as they are displayed. Provide an easy way to let users edit parts of a page without having to be redirected to an edit page. Typically, hover effects are used to invite editing.The Inplace Editor pattern allows for localized editing of elements on the fly. The pattern provides ease of editing by placing the controls right next to the elements they affect.For example, when in editing mode of an application, a page title element will display editing controls when the user hovers their mouse over it. The elements background color is highlighted and a tooltip is shown prompting the user to click the element to edit it. Once the user clicks the element, it is transformed into an input field (text, dropdown, etc.). A save button and a cancel button are also displayed. Often, the input field matches the styling of the original element. If the original element was a header written in size 20pt, the size of the font in the input field would also be 20pt. This styling is mirrored to ensure that the user can connect the original element with the new editableThe user can then edit the value of the input field (which is the same as the original elements value) and click save or cancel. If ‘save’ is clicked, the value is saved through an AJAX call to the underlying database, the value of the element is updated and the element is returned to normal view. If cancel is clicked, the element is changed back to the original view without any changes.This pattern is often combined with AJAX techniques, which is an asynchronous call to the server through javascript that does not require a refresh of the page. There are many javascript libraries available online that deliver ready-to-use inplace editors.An in-place editor provides an easy way to let the user edit parts of a page without having to be redirected to an edit page. Instead, the user can just click around on a page and edit the elements he or she wishes to change – without reloading the page.",
		"url": "https://ui-patterns.com/patterns/InplaceEditor"
	},
	{
		"pattern_id": "7",
		"pattern": "Preview",
		"pattern_header": "\n    The user wants to check how changes in form fields affect an end result as quickly as possible.\n    ",
		"pattern_usage": "\n\tUse when you want to provide the user with a real-time preview of what he or she is creating\n\tUse when it is hard for the user to comprehend how the final output will be without having a preview to reference\n\tDo not use when the input is straightforward and the resulting output does not depend on a specific layout\n",
		"description": "\n  Alternate titles:\n  Live Preview.\nThe user wants to check how changes in form fields affect an end result as quickly as possible.A collection of 60 User Interface design patterns, presented in a manner easily referenced and used as a brainstorming tool.Let users preview consequences of an action before committing to it.Update a preview of what modifying a form will result in throughout the entire interaction with the form. Instead of waiting for the user to submit the form, the changes are shown immediately in a preview. Each user event of significance results in a browser-side processing.Previews make it easier for users to decide whether or not to commit to a change and thus invite safe exploration and playful creativity. Show feedback immediately in live previews to further spark fun, play, and exploration.The result is increased interactivity. The user does not need to wait for page reload on a form submit to find out whether data was inputted correctly into the form. The feedback is immediate.",
		"url": "https://ui-patterns.com/patterns/LivePreview"
	},
	{
		"pattern_id": "8",
		"pattern": "Drag and drop",
		"pattern_header": "\n    The user needs to perform operations on one or more objects by moving them from one place to another.\n    ",
		"pattern_usage": "\n\tUse when you want to let users to perform more complex tasks through direct manipulation – through a What-you-see-is-what-you-get (WYSIWYG) approach.\n\tUse when you want to avoid forcing the user to go to another page in order to re-arrange the layout\n",
		"description": "The user needs to perform operations on one or more objects by moving them from one place to another.▲ Drag and drop upload call-out at Stamps and SonsA collection of 60 User Interface design patterns, presented in a manner easily referenced and used as a brainstorming tool.Let users pick up and rearrange content by dragging it across the screenInstinctively, many users try dragging and dropping objects in user interfaces. This conceptual metaphor with clear ties to the physical world provides a level of direct manipulation few methods can match. It is seen as one of the most effective ways to rearrange items in a list, move objects from one place to the other, or even upload files.As Drag and drop is not fully accessible you may want to consider supporting alternate ways to re-arrange your content modules.",
		"url": "https://ui-patterns.com/patterns/drag-and-drop"
	},
	{
		"pattern_id": "9",
		"pattern": "Good Defaults",
		"pattern_header": "\n    The user needs to enter data into the system, where some input values are most likely to match default values.\n    ",
		"pattern_usage": "\n\tUse when the user has to choose among many options, where some are most likely to match the default values chosen by other users.\n\tUse when it is possible for the system to make qualified guesses regarding what the user might choose.\n\tUse when it seems a complicated task to fill out the form without the default: when the number of required choices hinders the user from finishing filling out a form.\n\tDo not use for input fields that are important for the user to think about. For instance for signing up to a newsletter or accepting the terms and agreements of a website.\n",
		"description": "The user needs to enter data into the system, where some input values are most likely to match default values.▲ A typical use of the Good Defaults design pattern is at travel sites. Here, data like dates, trip type, and price range is pre-selected to what most other users typically select. Good Defaults provide ease of use and a quick start to searching for your next trip.A collection of 60 User Interface design patterns, presented in a manner easily referenced and used as a brainstorming tool.Pre-fill form fields with best guesses at what the user wants.Drop down boxes and text fields are prefilled or preselected with reasonable default values. The default values are intelligent guesses as to what the user would possibly select.When appropriate, reduce the cognitive load on users by pre-filling forms with default values. Use contextual information to make intelligent guesses as to what the user would most likely select. Do so only when you are reasonably sure your users would agree with your default values – otherwise, you will create extra work. Pre-filling controls to your own benefit rather than your users’ will most often backfire.By providing default values in often complex forms with many choices, you save the user from the hassle of selecting all the relevant choices. Filling out a long form can sometimes be enough reason for the user to go somewhere else, where the process is easier.The default values might not be right, but at least you provided the user with an example that he can change with as much effort as he would have put in if there was no example.",
		"url": "https://ui-patterns.com/patterns/GoodDefaults"
	},
	{
		"pattern_id": "10",
		"pattern": "Expandable Input",
		"pattern_header": "\n    The user wants to experience a main interface with as much screen real estate and with a minimum of distractions\n    ",
		"pattern_usage": "\n\tUse when you want the main focus to be on the main interface rather than its input controls\n\tUse when you want to keep distractions out of the main interface\n",
		"description": "The user wants to experience a main interface with as much screen real estate and with a minimum of distractions▲ Twitter.com has placed big input area, attracting important attention - with an input hint, at the top of the screen. As you click the input field, it expands - saving valuable above-the-fold screen space for content.A collection of 60 User Interface design patterns, presented in a manner easily referenced and used as a brainstorming tool.Expand the size of input fields as they come in focus or are filled with contentDesign your controls in two modes: expanded and contracted. As the user taps a contracted control, it expands to its larger size. This can help keeping secondary functions out of the way until the user is in need of them.Expandable inputs can help unclutter user interfaces by staying out of sight until needed. For multiple purpose user interfaces, it can be helpful to let optional actions, such as searching, posting, or commenting, attract a minimum of attention.",
		"url": "https://ui-patterns.com/patterns/expandable-input"
	},
	{
		"pattern_id": "11",
		"pattern": "Autosave",
		"pattern_header": "\n    The user wants to keep their data safe and saved while focusing on working without having to remember to do so.\n    ",
		"pattern_usage": "\n\tUse when you want to help the user focus on producing great content without worrying about whether their data is safe and saved.\n",
		"description": "The user wants to keep their data safe and saved while focusing on working without having to remember to do so.A collection of 60 User Interface design patterns, presented in a manner easily referenced and used as a brainstorming tool.Prevent accidental data loss by automatically saving user input at fixed intervals or at events of interest.Consider at what frequency it makes sense to auto-save inputted content for your application, and at what events it makes sense to trigger an auto-save. The most obvious event is clicking the save-button, but the event of moving the focus to another field might also be interesting to observe.To better guide users as to what state their document is in, consider changing the label of the save button from “Save”, when the form contains uncommited changes to “Saved” when the current form represents what has been saved in storage.Let users worry about creating great content rather than about loosing it. Removing the save button entirely can create fear, so consider keeping it around to make users feel safe. Leave an unobtrusive trace of conducted user actions and consider complementing with the Undo pattern.When implementing auto-save functionality, consider not removing the “Save” button. Users tend to panic, when there is no “Save and close” button. Even though the “Save” button does nothing or only closes the window, it provides confidence and reassurance in users that their data is safe. It’s an issue of trust. Did the system hear me? Am I sure that I am sure?",
		"url": "https://ui-patterns.com/patterns/autosave"
	},
	{
		"pattern_id": "12",
		"pattern": "Settings",
		"pattern_header": "\n    The user needs a central place to indicate preferences for how the application should behave\n    ",
		"pattern_usage": "\n\tPut preferences in the Settings area, when they are used by the majority of users\n\tPut prefernces in the Settings area, when they are used by a minority of users, but are essenatial to supporting their needs.\n\tUse to provide a place for infrequently accessed preferences.\n\tUse to capture user preferences\n\tDo not use settings for frequently accessed actions. Move these to a toolbar.\n",
		"description": "\n  Alternate titles:\n  Options,  Preferences.\nThe user needs a central place to indicate preferences for how the application should behave▲ Pinterest has grouped its settings into manageable chunks, which lets the user customize the experience to his specifications.A collection of 60 User Interface design patterns, presented in a manner easily referenced and used as a brainstorming tool.Let users indicate their preferences for how your product should behave. Provide a central place for users to customize your product to their specifications. Keep configurable options well-organized, predictable, and manageable in number. Group and move less important settings to their own screens.Let the user be able to quickly understand all available settings and their current values. If there are many settings to comprehend, prioritize the ones most likely to interest users. Group and move less important settings to seperate screens.Consider good initial values for preferences – choose the default most users would choose and be neutral and pose little risk.To avoid in-comprehensive lists of preferences, consider clustering settings into multiple shorter lists. Good heuristics are (you might change numbers):1 Settings Design Pattern at the Google Material Design spec.",
		"url": "https://ui-patterns.com/patterns/settings"
	},
	{
		"pattern_id": "13",
		"pattern": "Fill in the Blanks",
		"pattern_header": "\n    The user needs to enter data into the system\n    ",
		"pattern_usage": "\n\tUse when you find yourself creating labels for input fields that do not really explain what the input field is all about.\n\tUse when you find yourself creating long and complicated labels for input fields, which in turn makes it hard for users to understand.\n\tUse when you can possibly express the context of the input field by placing it in a sentence.\n\tUse when filling out the input field is mandatory or strongly appreciated. Leaving parts of a sentence unfilled creates annoyance in the user.\n\tUse when you have a relatively small set of input fields to place as part of the sentence. If you have many input fields, placing them all in a sentence can seem tiresome for the user, as the sentence structure forces the user to read all sentences and place all input fields in the context of those sentences.\n\tDo not use if you have many fields that are not required to be filled out.\n",
		"description": "\n  Alternate titles:\n  Natural language form.\nThe user needs to enter data into the systemA collection of 60 User Interface design patterns, presented in a manner easily referenced and used as a brainstorming tool.Order input fields in the form of a sentence with input fields as blank spaces to be filled by the user. Write a sentence and let the user fill in the blanks of the sentence by selecting or filling out input fields that are in place of words.When the input field is not inserted at the end or the beginning of the sentence, it is important for the general readability and understandability of the interface, that the input fields does not take up more space than the height of one text-line. Input text boxes, and drop-down lists therefore work the best for this sort of usage.The pattern is often seen in applications that filter large lists out by conditions. In Apple’s iTunes, the pattern is used to create conditions for smart playlists (See examples at bottom of page).The biggest drawback of the pattern is its poor ability to be localized into different languages as the placement of each input will possibly have to be rearranged to match the grammar of each language. Using “Fill in the blanks” in this way hinders immediate conversion of a user interface to other languages.We all know how to finish a sentence. By inserting input fields into a sentence of words, the user interface is made self-explanatory, possible misundestandings are minimized, and the context is understood more clearly.Sometimes, it can be hard to find a describing label for an input that does not alienate the user to the system.Consider the example in the bottom of the page from the Ruby On Rails wiki. Here, both the submit button (“Save”), the input field for the author name, as well as a back in history link are presented all in the same sentence. These three options could have easily been represented on separate lines with a separate label for each option. Instead, the three options are presented as a sentence, and thus put in context of each other.Furthermore, the example above uses the Input Prompt pattern to encourage users to fill out the text field.The “Fill in the blanks” makes the interface somewhat self-explanatory. Our semantic capabilities as human beings allow us to fill in the missing parts of a sentence.",
		"url": "https://ui-patterns.com/patterns/FillInTheBlanks"
	},
	{
		"pattern_id": "14",
		"pattern": "WYSIWYG",
		"pattern_header": "\n    The user wants to create content that contains rich media and formatted text but does not the knowledge or time to write HTML.\n    ",
		"pattern_usage": "\n\tUse when you want to give the user a clear indication of what their content will look like when it is published. WYSIWYG is an acronym for What You See Is What You Get.\n\tUse when the users of a site are not comfortable with formatting text using HTML codes or a markup language such as textile or markdown.\n\tUse to lower the barrier of letting your users add formatted content to your site.\n\tUse when you want an easy way to integrate media into the formatted content of your site that does not require HTML or any other syntax knowledge.\n\tUse when the user is inclined to spend time correcting small details on their content. WYSIWYG allows users to see formatted results as they edit, this increases their confidence and allows for quick and good looking results.\n\tDo not use if you want to keep the HTML syntax clean. Many WYSIWYG editors are known to produce bloated and untidy HTML code.\n\tDo not use if you want the editor to function in all browsers. WYSIWYG editors rarely support all browsers, and if they do, it is often only the latest releases of the browsers.\n",
		"description": "\n  Alternate titles:\n  What You See Is What You Get.\nThe user wants to create content that contains rich media and formatted text but does not the knowledge or time to write HTML.There are many javascript libraries available online that will convert a <textarea/> HTML element into a fully functioning WYSIWYG editor. The editor displays a work area that is both input and the final formatted output. The content is stored as HTML in a database.Editors can be customized to your user’s needs. You can disable unnecessary functions. You might choose to not allow image inserts, tampering with font color or size – or even force the user to only use a predefined list of CSS classes.WYSIWYG (What You See Is What You Get) was initially introduced in word processors such as WordPerfect and Microsoft Word. It was then a revolutionary way to write documents, where the editor on the screen mimicked the result in print.Recently, WYSIWYG editors were introduced to forms on the web. Previously, long text was inserted into <textarea/> fields, with no formatting options what-so-ever. WYSIWYG editors now allow the input to mimic what will be seen on screen.",
		"url": "https://ui-patterns.com/patterns/WYSIWYG"
	},
	{
		"pattern_id": "15",
		"pattern": "Input Feedback",
		"pattern_header": "\n    The user has entered data into the system and expects to receive feedback on the result of that submission.\n    ",
		"pattern_usage": "\n\tUse when you want to provide feedback to the user upon submitting content to your site.\n\tUse when you want to notify your users about errors that happened during form submission.\n\tUse when you want to let your users know that everything went as planned upon content submission.\n",
		"description": "\n  Alternate titles:\n  Confirmation notice, Error notice, Alert, Inline Form Validation.\nThe user has entered data into the system and expects to receive feedback on the result of that submission.▲ When signing up at twitter, you instantly, as you type, receive feedback to what you have typed.When users submit content to your site via forms, errors in the are bound to happen from time to time. The goal of this pattern is to improve the user experience by minimizing input errors.A paradigm called data validation is well suited for catching errors at the time of submitting a form. A common way to tell if data validates is to set up rules for each input field in the form. The data entered must pass these rules to be considered valid. Such validation rules can be:If the data submitted by the user validates, it is good practice to let the user know that everything went as planned. Even better, redirect the user to a page, where he or she can see the newly submitted content in a context.However, if the data submitted by the user does not validate, an error message should be presented to the user explaining how to correct the data and request for a re-submit. Such an error message should explain that:The visual representation of the input feedback should correspond with the message you want to give. If the submission went successfully, consider letting the user know in a green box. If the message is neutral, a color often used is yellow. If something went wrong, red is often used. But beware – red means danger – is the user experiencing a dangerous situation?As the user fills out a form on a web page, he or she is conducting the process of converting mental data structured in one way to a written form structured in another way. As all humans do not think alike, we are bound to enter the data in different ways as we try to convert our individually structured data to a shared structure defined by the system.Data entered in web forms is prone to contain errors, which we must be prepared for in our design. The user must be made aware of the fact that the data entered did not match the structure that we designed for. Using visually distinct feedback notices, the user will be made aware of such errors and how to correct them.It can be argued that you should focus more on preventing errors before the user submits his or her data than on providing a good error message after data has been submitted. Consider constraining input with select boxes.Consider the language of your error messages, as these may have an emotional impact on your users. What tone of voice is appropriate for your users?Users will feel more confident and informed when they receive feedback from the system. Feedback includes notifications, dialog message boxes, colored or disabled buttons, loading animations, inline alerts, tooltips, hover effects and so on. Bridge the gap created between performing an action and evaluation of the system after an action.",
		"url": "https://ui-patterns.com/patterns/InputFeedback"
	},
	{
		"pattern_id": "16",
		"pattern": "Calendar Picker",
		"pattern_header": "\n    The user wants to find or submit information based on a date or date range\n    ",
		"pattern_usage": "\n\tUse when the user wants to easily choose a date or date range in order to submit, track, sort, or filter data.\n\tDo not use in isolation, when the user is more familiar and efficient with another way of inputting a date. Some users prefer inputting a date via a text field.\n\tDo not use when the date to be inputted is more easily inputted via writing the date as text – an example is birthday (18, 30, 50, or 70 years back – requires many clicks for selection)\n",
		"description": "\n  Alternate titles:\n  Date picker, Date selector.\nThe user wants to find or submit information based on a date or date range▲ Beautiful calendar date selector at everyblock.com.The calendar picker is activated in a variety of ways:On activation, a box with a month-calendar is displayed on the current page, prompting the user to select a date in the box. It is most common to only show one month, but some interfaces show up to 3 month calendars next to each other to ease the click-burden of the user and provide a better overview.The month-box calendar comes with several different shortcuts:For some interfaces, it makes sense to not allow the selection of certain dates. An example often used is to only make it possible to select banking days, days in the future, or days within the few forthcoming months.When designing for efficiency in web application, an area that often gets little attention is the contexts of input. On most desktop computers the most common way of inputting data is via keyboard or mouse. On mobile devices touch, keyboard and camera are the most common input methods.Using a calendar picker is an easy way of inputting a date. But also consider a quick and effortless way to input a date – one were the user does not need to switch between input devices but can rather accomplish their task with a single input device.For accommodating text inputs, consider using the Forgiving Format pattern to lessen input errors.Use the Good defaults pattern to achiee better data and spelling accuracy on input by pre-selecting appropriate dates.The defaults you pre-select will depend on the context but will most often be the current date or time. However, If you were designing a public transport route planner, you might default the start time to a half hour from now, as most travellers won’t be starting their journey right away when searching for a fare.If the user is selecting a date range, it is good practice to never let end-date be before the start date. That means listening to the start-date for changes and changing the end-date if the start date is set to anything bigger.Display complete weeks, even when a month does not begin at the end of the week. Grey out visible dates from previous and next months, but be sure they are still selectable.Make sure that link targets are big and thus easy to click on.The calendar picker is a familiar graphical interface that is commonly understood among users. It helps the user easily choose a date or date range for use in submitting information or filtering data.In some countries it is typical to display a calendar with Sunday as the first day of the week, where in many European and Asian countries, Monday is typically depicted as the first day of the week.Some countries (E.g. Germany and Scandinavian countries) use week numbers for general planning purposes. In these countries, using the week number is almost as common as using the month name for describing a date range. Consider displaying the week number for each week row.",
		"url": "https://ui-patterns.com/patterns/CalendarPicker"
	},
	{
		"pattern_id": "17",
		"pattern": "Morphing Controls",
		"pattern_header": "\n    The user wants to only be presented with controls available to the current mode\n    ",
		"pattern_usage": "\n\tUse when some controls don’t need to be displayed at the same time\n\tUse when you want to declutter the screen with unnecessary and unavailable controls\n\tUse when your user experience contains several modes (playing/pause, on/off)\n",
		"description": "The user wants to only be presented with controls available to the current mode▲ When you choose to click the light-colored "Follow"-button on a twitter profile, the button morphs into reading "Following" and now has a dark background with white text.A collection of 60 User Interface design patterns, presented in a manner easily referenced and used as a brainstorming tool.Information presented and actions available in a user interface element depend on its mode. When a video is paused, the play command is available, but pause is not.Design affordance in each mode toward the most common or wanted interactions and emphasize asymmetry, incompleteness, or something being wrong to push users toward changing modes.Be sure to keep a consistent look between each state of the control that morphs. Font and text size should stay the same, but colors may differ.Morphing Controls work well with binary actions, such as:",
		"url": "https://ui-patterns.com/patterns/morphing-controls"
	},
	{
		"pattern_id": "18",
		"pattern": "Undo",
		"pattern_header": "\n    The user wants to revert a mistaken input\n    ",
		"pattern_usage": "\n\tUse when you want to provide users with more confidence and willingness to play around\n\tThe more costly it is to lose data, the more important it is to provide undo.\n\tWhenever there is an opportunity to lose work, the program should allow undo actions.\n\tNever use a warning when you mean undo.\n",
		"description": "\n  Alternate titles:\n  Multiple Undo,  History, Global Undo.\nThe user wants to revert a mistaken input▲ After telling your preferences, a new home page is constructed for you at Pinterest. If you do not like the result, you can undo the action.A collection of 60 User Interface design patterns, presented in a manner easily referenced and used as a brainstorming tool.Allow users to easily reverse their own actionsUsers aren’t perfect – they tend to make mistakes.Promote safe exploration and playfulness by providing confidence that mistakes aren’t permanent. Multi-level undo lets users incrementally construct and explore work paths quickly and easily. The more costly it is to lose data, the more important it is to provide the opportunity to undo.A great side effect of utilizing the Undo pattern, is that it provides users with more confidence and more willingness to try new and different things. By promoting trial and error, users are able to learn and master your application more quickly.1 Undo Design Pattern at Quince2 Undo Design Pattern at Patternry.com3 Multi-level Undo Design Pattern by Jenifer Tidwell4 Goodbye Back Button by Michael Zuschlag5 The importance of Undo by Paul Boag6 Never Use a Warning When you Mean Undo by Aza Raskin",
		"url": "https://ui-patterns.com/patterns/undo"
	},
	{
		"pattern_id": "19",
		"pattern": "Input Prompt",
		"pattern_header": "\n    The user needs to enter data into the system\n    ",
		"pattern_usage": "\n\tUse when the label of an input field does not fully explain what should be filled into it or when using such a label feels like over-explaining the interface.\n\tUse when an example text or question answers what should be filled into an input field just as well as a label.\n\tUse when you want to save the space that a label otherwise takes up.\n\tUse in combination with a label, to further explain what kind of input is needed.\n",
		"description": "The user needs to enter data into the systemAn input field is pre-filled with example text or a question that prompts the user with what to do or type.The Input Prompt pattern is most successfully used with dropdown lists and text fields. As dropdown lists have a fixed set of choices, words like Select or Choose are used for prompts. For text fields, the prompting string often begins with a call to action: Enter, Type, Search. End the string with the noun the input is describing, for instance Enter city or Enter an address.Text fields use the Input Prompt pattern combined with scripting to remove the prompt text from a field, when the user’s focus is set. Once the user enters the input field to type in content, the prompting text is removed and replaced with nothing so that the input field is free for the user to fill out.When a user fills out a form it is most often with the purpose of filling it out as quickly as possible to get on with the service offered. This is why the user often just scans through form fields and labels without giving the labels much of a glance. By using input prompts, immediate attention is drawn to what the user needs to fill in. The user can’t miss it. Although you must beware of removing labels entirely, as the input prompt is removed once focus has been set to the text field.Input prompt is often used for small forms that are key to the core functionality of a site as inserting the label inside the text field itself helps save space. For more elaborate forms, there is often more than enough room available to explain each input field.",
		"url": "https://ui-patterns.com/patterns/InputPrompt"
	},
	{
		"pattern_id": "20",
		"pattern": "Forgiving Format",
		"pattern_header": "\n    The user needs to quickly enter data into the system, which then in turn interprets the user's input.\n    ",
		"pattern_usage": "\n\tUse when the more explicit select boxes, radio buttons, and checkboxes make entering data a too complicated process for the user to engage with the system.\n\tUse when the time it takes to complete a task proportional exceeds the importance of the goal the user wants to accomplish.\n\tUse when the input you want to collect is relates to one topic. For instance a physical location or an event with a given start time.\n\tUse when the expected user input can be somewhat easily interpreted by a computer program.\n\tDo not use when the user can possibly ask or input anything. Only use for a narrowly defined purpose.\n",
		"description": "The user needs to quickly enter data into the system, which then in turn interprets the user's input.A collection of 60 User Interface design patterns, presented in a manner easily referenced and used as a brainstorming tool.Allow users to enter text in their own format and syntax, and let the system interpret it intelligentlyLet users focus on getting things done rather than typing in things correctly. Lower the barrier for users to interact by allowing a broad spectrum of formats and syntaxes to be inputted. Consider nudging users to provide more easily interpreted information by paying attention to how you ask for input.Transfer the problem inputting data from a user interface problem to a programming problem. Behind the scenes, an interpreter checks for different word patterns, and converts them into a formatted value.Using the forgiving format pattern saves space and decreases the barrier for the user to interact with the system.Depending on how widely defined the input topic is, it can be increasingly hard for the backend program to interpret the input field. The success of this pattern has much to do with how information requested – how the user is prompted.",
		"url": "https://ui-patterns.com/patterns/ForgivingFormat"
	},
	{
		"pattern_id": "21",
		"pattern": "Wizard",
		"pattern_header": "\n    The user wants to achieve a single goal which can be broken down into dependable sub-tasks.\n    ",
		"pattern_usage": "\n\tUse when the user needs to perform a task or a goal that dictates more than one step.\n\t\n\t\tAn example is adding an image to a website which can include uploading the image and cropping the image; the image cannot be cropped before it is uploaded to a server.\n\t\n\tUse when the user needs to perform a complex task consisting of several dependable sub-tasks.\n\tUse when the user needs to input complex data into a system but the tasks is more easily achieved by splitting the process into a series of smaller and simpler steps.\n\tUse when the user needs guidance: the user wants to achieve an overall goal, but may not be familiar in the steps needed to reach the goal.\n\tUse when the steps needed to reach a final goal may vary due to decisions made in previous stages.\n\tUse when the user lacks necessary domain knowledge.\n\tUse when the user must complete steps in a specific sequence.\n",
		"description": "\n  Alternate titles:\n  Setup Wizard.\nThe user wants to achieve a single goal which can be broken down into dependable sub-tasks.▲ The wizard used to get an insurance quote at homesite.com uses a highlighted tab in the menu to communicate the purpose of the wizard, uses the good default pattern for selecting options, has a clear communication of the wizard length as well as how far the user has gone, uses large navigation buttons, has all its content above the fold, and provides a nice alternative to the wizard by letting the user talk to a real-life person for assistance.A collection of 60 User Interface design patterns, presented in a manner easily referenced and used as a brainstorming tool.Break down a single goal into dependable sub-tasks.The task of inputting data into the system is parted into multiple steps. Each step is presented to the user one at a time.The user should be presented with information about the steps that exist, progress through the process and which steps are completed.The Wizard pattern is very similar to the Steps Left pattern. The difference between the two is the focus. Where Steps Left is focused only on explaining the steps of a process, the Wizard pattern is about parting dependable sub-tasks needed to perform a complex goal into separate steps.The Wizard pattern is also different from the Steps Left pattern in that the steps needed to perform a goal can vary depending on the information inputted in earlier stages. In this way, the Wizard pattern separates itself from being merely an visible aid for the user.Basically, a wizard is a series of screens or dialogue boxes walking users through from start to completion. Each screen asks the user to input information by either making selections or filling in fields. After inputting data, users navigate through the wizard by clicking navigation options like “Previous” and “Next”. At the final step users click “Finish” instead of “Next”, which thus indicates the completion of the wizard.It is also good practice to include a “Cancel” button on all screens that will lead the user back to where he or she came from. Typically, a “Cancel” button is located near other navigation buttons, but in a position that clearly separates the button from the “Previous” and “Next” buttons. Furthermore, it is also good practice to provide a warning if data inputted up to that point will be lost clicking the “Cancel” button. It is fair for to assume that the user expects that he or she can return to the wizard later and start from where they left off3. In order not to frustrate the user more than necessary, the consequences of exiting the wizard should be communicated.Wizards are meant to be fast and easy. For this reason, it is a good idea to keep the content of a screen as well as its navigation above the fold.Keep the wizard’s purpose clear on every screen by placing a clear and concise label on every screen. Optionally accompany the label with a brief explanation of the wizard’s purpose on the first screen. This will help users remember why they entered the wizard in the first place and how they will benefit from finishing the wizard.Users of a wizard aren’t necessarily experts, why you should refrain from using technical jargon to prompt users. The language used should fit in to the user’s frame of reference5.It is good practice to present a summary of choices made throughout the wizard to the user near the end of the wizard. This will allow the user to review and double-check inputted data before the final “Finish” button is clicked. In the case the user wishes to change the data entered, he or she should be able to navigate back to the given page where the date was entered. If the amount of steps in the wizard is greater than 8-10, it is a good idea to provide links directly to the screen of the data input.A wizard is a perfect place for using Good defaults. Most wizard users are not familiar with the task they are performing and are thus unfamiliar with the values for the choices they are asked to make.By splitting up a complex task into a sequence of chunks, you can effectively simplify the task. Each chunk represents a separate mental space, easier to deal with alone than as a whole. Contrary to the Steps Left pattern, the steps needed to perform a goal can vary depending on the information inputted in earlier stages.By separating complex tasks needed to achieve a goal into several steps, the process of inputting data can take several different directions depending on what input is entered.The complex task of inputting large amounts of dependable data can be adjusted and streamlined to fit the decisions of a user throughout a process. In the context of decisions the user makes in each step, unnecessary steps can be cut out and important steps can enter into the focus.In a system with many variables, a user can reach their  goals by manipulating these variables in different ways. The Wizard pattern can be used to group such variables into separate goals. This will convert the task of completing a complex goal from multiple disparate actions into a coherent process.When users are forced to follow a set of pre-defined steps they are less likely to miss important aspects of a process and will thus commit fewer errors.Wizards are often made for the untrained user. For this reason, make sure your wizard can be completed without training. A rationale behind using a wizard is to avoid training for rare or intimidating tasks – not to develop expertise5.Using the Wizard pattern helps the user perform a complex task, but can at the same time it effects the performance time of the task.An effective wizard breaks down a complex tasks into sub-tasks and possibly sub-sub-tasks. Sub-tasks are sequenced in a way that feels familiar and comfortable for the user using task analysis. Task analysis is conducted before screen design begins and is best done observing real users performing the task in their own work environment. The output of the task analysis is an outline and information architecture for the wizard.By breaking a task up into too many screens, there is a chance of disorienting the user. If it takes too long to finish the wizard, the user may get annoyed and possibly abandons the wizard before finishing it.While the amount of screens should be limited, you should not always keep the amount of screens to a minimum. When a screen of a step in your wizard grows to a height that does not fit into a regular screen solution, there is a risk of annoying the user and making the wizard tiresome to finish as it forces the user to scroll to enter data and navigate back and forth. Consider breaking such steps up into two or more screens.To find out whether you have hit the right balance between a low number of screens and short screen heights, put your wizard through a usability test. It is hard to define other means of checking when a good balance between the two has been found.A wizard support users performing a task by lowering the learning curve. Use of a Wizard supposedly increases user performance, in much less time than without the use of a wizard. It however comes with the cost of “dumbing down” the task as users perform tasks without fully understanding them and being aware of the underlying decisions5. The result is users not being able to perform a task if the wizard is not available as well as not being able to fine tune decisions made by manipulating other parts of the system.A wizard should not be the only way for users to complete a task, but merely an alternative to another more complicated method of completing the same task. Use a wizard for allowing the untrained user to get started quick and let the more experienced users, who prefer more flexibility than the wizard allows, use the more complicated method.1 Wizard design pattern by Jenifer Tidwell.2 Wizard design pattern by Martijn van Welie.3 Crafting a wizard by Jodi Bollaert.4 More Web-based wizard tips and tricks by Jodi Bollaert.5 Designing wizards by Saul Carliner6 Wizards and guides by Bob Baxley at Boxes and arrows.",
		"url": "https://ui-patterns.com/patterns/Wizard"
	},
	{
		"pattern_id": "22",
		"pattern": "Inline Help Box",
		"pattern_header": "\n    The user needs assistive information located close to the interaction they are about to perform.\n    ",
		"pattern_usage": "\n\tUse when an interaction with your website is not necessarily intuitive and self-explanatory in itself.\n\tUse inline tips to document your interface\n\tUse when you want to motivate the user to start using the system.\n\tUse when you want to aid the user in getting started with your web application.\n\tUse when you want to guide the user to get a good start with your web application.\n\tUse to gently introduce functionality to the new and untrained user.\n\tUse the ‘hide’ functionality to avoid frustration of the experienced and trained user.\n",
		"description": "\n  Alternate titles:\n  Inline hints, Walkthrough.\nThe user needs assistive information located close to the interaction they are about to perform.Document your interface in-line with descriptive help blocks. If important information needs to be communicated to the user, it can be easily explained with an inline help box located above or below the main content of a screen.The inline help box needs to be differentiated from normal content. As the help box itself is not part of the main functionality, it is a good idea to add a style to it that visually separates the help box from that functionality. An easy way to do this is by applying another background and font color to the help box.Additionally, to avoid the user’s discontent with the help box, a great feature of the in-line help box is to have a “hide this box” functionality. Once the user has clicked this link, the help box will never be shown to the user again.However, you might want to provide an option for the user to re-enable all help boxes, to allow the user to get that first-hand help that he or she started out getting.Providing your users with assistive information, located close to an interaction, makes accessing and consuming instructional info simple and easy. In Line help boxes are far more engaging than reading disconnected FAQ’s or help sections.By allowing the user to easily close/hide each help box, the user is not bothered with unnecessary information once it has been understood.",
		"url": "https://ui-patterns.com/patterns/InlineHelpBox"
	},
	{
		"pattern_id": "23",
		"pattern": "Completeness meter",
		"pattern_header": "\n    The user wants to complete a goal but needs guidance in when it is reached and how to reach it.\n    ",
		"pattern_usage": "\n\tUse when you want to keep the user on track when completing a specific goal.\n\tUse when you want to ensure that your users complete a set of minimum tasks that make up their presence.\n\tDo not use when the end-goal is dependent of a series of sequential tasks.\n\tDo not use for critical goals, but rather for goals that would be nice to have reached. The idea of this pattern is to make the user perform a few more tasks than he or she would normally do.\n",
		"description": "\n  Alternate titles:\n  Progress Bar,  Percentage Done Meter,  Progress Indicator.\nThe user wants to complete a goal but needs guidance in when it is reached and how to reach it.▲ The completeness meter at udemy.com shows your progress of completing an online course.A collection of 60 User Interface design patterns, presented in a manner easily referenced and used as a brainstorming tool.Let users gauge progress toward reaching an end goal. Divide the end goal into smaller sub-tasks, and increase the percentage of completeness as each task is completed.Divide and end-goal into several sub-tasks. The end-goal can be arbitrarily defined, such as “Completeness of your profile” or “Elite member”. As each sub-task is completed, the percentage of completed tasks goes up – reaching 100% when the goal is finished.It is often seen that along with stating the progress of the goal (for instance: “34% done”), one or more links or hints to how the progress can be improved is also provided. This will help keep the user on track and immediately move to the next task once one has been completed.There are several approaches to presenting and celebrating an end-goal state. One option is simply to indicate that all tasks have been completed (as in “Your profile is complete!”) along with a “100%” mark. Another is to award the user with a collectible achievement: a badge, trophy, or similar award that he or she can decorate his personal profile with and show off to his or her friends.A third way to celebrate completing the goal and its sub-tasks is to announce it in his or her profile feed, or even on a centralized site-wide feed.Extrinsically motivate users by triggering their desire for achievement, curiosity, and completion by providing a feedback loop that lets users gauge their progress toward reaching an end goal.This pattern uses a set of psychological drivers that pushes the user to move forward towards the end goal.One is curiosity. We are curious to find out what happens when we reach 100%. Will I be rewarded or will my profile look different?Another is the feedback loop. As the user completes sub-tasks, his or her progress moves towards 100%. A clear link between completing tasks and reaching the end goal has been established.As humans, we feel inclined to complete the goals we have decided to start. Most often we choose goals for ourselves based on what we want to spend our time on, afterwards we put our minds into it.The Completeness Meter pattern is an attempt to present such a goal to the user in order for him or her to decide on completing it. By presenting easily completed sub-tasks, it is possible to convince and persuade the user into spending time he or she in other circumstances wouldn’t have.",
		"url": "https://ui-patterns.com/patterns/CompletenessMeter"
	},
	{
		"pattern_id": "24",
		"pattern": "Steps Left",
		"pattern_header": "\n    The user is about to go through the process of filling in data over several steps and is in need of guidance.\n    ",
		"pattern_usage": "\n\tUse when a user goal can be split into a series of smaller steps that is easier displayed on separate screens.\n\tUse when the steps of a process is so long that the user might get the impression that it will go on forever without the guidance of steps.\n\tDo not use when there is only 1 or 2 steps in submitting data to the website.\n\tDo not use when the process of filling out data is easily foreseeable.\n",
		"description": "\n  Alternate titles:\n  Workflow.\nThe user is about to go through the process of filling in data over several steps and is in need of guidance.▲ Facebook uses the Steps Left pattern to indicate waiting time when reviewing a submitted ad campaign.A collection of 60 User Interface design patterns, presented in a manner easily referenced and used as a brainstorming tool.Add a navigation block describing the steps involved in submitting data to the system. The block should always appear on the page. As the user progresses through the process, the navigation block is updated accordingly. The current step is highlighted, giving a clear indication to the user how far they have come and how much further there is to go.Remove unnecessary distractions like extra navigation, advertisements, and the likes.The Steps Left pattern is used when it is critical to maintain the user’s focus throughout the process of filling in data to the system. This is for instance critical in e-commerce websites, where the checkout process is often guided by this pattern. In e-commerce websites, the checkout process is the most critical part of the site, as this is the part that captures the customer’s money. The Steps Left pattern provide the user with a great overview of how far in the process the user has gone: it provides a visible end to the process, which the user can aim for.This pattern is similar to the Wizard pattern most commonly found in desktop applications, which guide the user step by step.",
		"url": "https://ui-patterns.com/patterns/StepsLeft"
	},
	{
		"pattern_id": "25",
		"pattern": "Rate Content",
		"pattern_header": "\n    The user wants to promote a specific piece of content in order to democratically help decide what content is of higher quality.\n    ",
		"pattern_usage": "\n\tUse when you want a mechanism to handle risk for your users: is an item of content worthwhile spending time and/or money on.\n\tUse when you want your users’ help to democratically decide what content is of higher quality.\n\tUse when you want to let the voice of your users guide other users in what is good and bad.\n\tUse when your website has a large user-base.\n\tUse when you feel that you can trust your users’ subjective opinion on which items are of higher quality than others.\n\tDo not use when your website has a small community. A large user base and a strong community is important for enough votes to be generated and in turn for comparison between items to render meaningful.\n",
		"description": "The user wants to promote a specific piece of content in order to democratically help decide what content is of higher quality.▲ At kelkoo, both products and sellers are reviewed. The  rating of the sellers is presented next to their price for a given product and a textual description of each offer for each seller.A collection of 60 User Interface design patterns, presented in a manner easily referenced and used as a brainstorming tool.Let users rate content in order to democratically help decide what is of higher quality.User ratings act as a mechanism to handle risk for your users: is something worthwhile to spend time or money on? Promote community participation by letting users democratically decide what is of higher quality. Consider accompanying quantitative ratings with qualitative comments or reviews.This pattern is much like the Vote To Promote pattern. It differs from the Vote To Promote pattern by having different outcome. The outcome is to allow users to guide other users about what is good and bad rather than to promote what is interesting.The pattern consists of a number of mechanisms that work together:The Rate Content pattern promotes community participation and can assist you in separating good quality content from bad quality content. This is especially useful when your website relies on user submitted content.Rating content is about handling risk from the user’s point of view. Will a user on eBay cheat me or is a book on amazon worthwhile my time and money?The main reason to use the Rate Content pattern is assist the user in managing risk. Examples of such risk are spending money on buying a product or from investing time on another user.When implementing a rating system, you need to consider a number of things in relation to what it should be used for and how it should be communicated:Who is doing the ratingWhen reading reviews about an item and seeing how other users rate a given item a number of concerns are bound to be raised by the user: “Is the rating and review honest and authentic?”, “Are the users who rated a given item like me?”, and “Do the reviewers posses the relevant competence to review the product or service in question?”.Amazon and Netflix have solved this problem by letting people rate the ratings: was this review helpful for you?What is being ratedBe clear when communicating what is being rated and make sure that the user knows exactly what he or she is rating. If what is being rated seems ambiguous, the value of the review for other users in turn diminishes. For instance, if a website collects good computer deals that can be rated by the website’s users, is it the trustworthiness of the seller, the products, or the price that is being rated?Consider making your rating system multi-dimensional, or simply be clear about what – exactly what – is being rated.What behavious are we trying to encourage or discourage?Like with the similar community driven patterns, several pitfalls can make or break the success of the Rate Content pattern. Are some users trying to promote or demote certain items? – perhaps their own or their competitors product – maybe their friends or foes. You might want to setup a number of measures to prevent users from misusing the system, such as limiting the maximum activity of a user, looking out for malicious activity, or promote trusted key users to count more than othersDesign your rating system so that you encourage the behavior you want. Making your rating system multi-dimensional by breaking up the full rating into sub-parts that by their title explain exactly what you want measured (rated), is one way of solving this problem.",
		"url": "https://ui-patterns.com/patterns/RateContent"
	},
	{
		"pattern_id": "26",
		"pattern": "Wiki",
		"pattern_header": "\n    You want to create a repository for your website or application where users can produce and manage information while collaborating on public content.\n    ",
		"pattern_usage": "\n\tUse when you want the user to be able to contribute to a page by adding or editing the content of the website.\n\tUse when you have a collection of documents you want to keep updated over time.\n\tDo not use when publishing editorial content: content that stems from the publishers of the page that is not to be tampered by anybody else. For instance the terms and agreements of a website or other legal information.\n\tDo not use for content that ages – that is relevant for a certain time period only (news, blog posts, etc.)\n",
		"description": "You want to create a repository for your website or application where users can produce and manage information while collaborating on public content.A wiki is a page concept itself, and not just a pattern that functions as a part of a website. The format however represents enough value in itself to represent a design pattern and not just a page concept.A wiki page can be edited by anyone. Anyone can modify information and add new pages to the document collection. All pages are under version control, and can easily be rolled back to earlier versions. A wiki allows users to easily create, edit and link web pages together.A wiki enables documents to be written collaboratively, in a simple markup language using a web browser. A single page in a wiki is referred to as a “wiki page”, while the entire body of pages, which are usually highly interconnected via hyperlinks, is “the wiki”. A wiki is essentially a database for creating, browsing and searching information. [Wikipedia.org]Wikis are often used to create collaborative websites, power community websites, and are increasingly being installed by businesses to provide affordable and effective Intranets or for use in Knowledge Management. [Wikipedia.org]",
		"url": "https://ui-patterns.com/patterns/Wiki"
	},
	{
		"pattern_id": "27",
		"pattern": "Vote To Promote",
		"pattern_header": "\n    The user wants to promote a specific piece of content in order to democratically help decide what content is more popular.\n    ",
		"pattern_usage": "\n\tUse when you want your users to democratically decide what is interesting content.\n\tUse when you want your users to democratically submit content to your website.\n\tUse when you want to trust your users subjective opinion\n\tDo not use when your website has a small community. A large user base and a strong community is important so that a sufficient amount of votes can be generated and meaningful comparisons can be made.\n",
		"description": "The user wants to promote a specific piece of content in order to democratically help decide what content is more popular.▲ At stackoverflow.com, you can ask technical questions and execpt answers. The answers given are then voted up or down by the readers with the results that the most useful answers will be at the top closest to the question.A collection of 60 User Interface design patterns, presented in a manner easily referenced and used as a brainstorming tool.Let users participate in content curation by letting them promote quality content.Use the power of your community to help curate what is more popular. Display a voting mechanism next to each candidate item. As users click, their vote is counted in favor of promoting that item. Consider providing an embeddable and stand-alone voting mechanism that third-party publishers can include on their site.This pattern consists of a number of mechanisms that work together:Provide a webpage with a submission form. The most basic and traditional way to let your users submit content is via a form on a webpage that you host. After content has been submitted, your users can freely vote on the submitted content’s quality.Provide a widget for the user to  to place on his or her website. If the type of content your users are submitting, you can provide a widget to your users to place on their own website. This will allow third-party publishers to submit content directly from their own website. The widget is really a javascript include code, that will add the address of the webpage, if the webpage has not been added to your site yet.The Vote To Promote pattern promotes community participation and can potentially help pick up and promote the newest and hottest content around. By using your community to judge what is more popular, you avoid the need to hire paid professional reviewers.Using the Vote To Promote pattern on your website brings the user to the center of your site. It is used to implement a democratic control over the content of your website with the following pros and cons.Each user votes from their perspective of what defines good quality: their opinion is subjective. This raises the question whether the numeric number of votes on each item can really be compared and if the item with the most positive votes really is the item with the highest quality.This dilemma raises the question whether some users should have more authority than others: if some users’ votes should count more than other users’ votes. This might be necessary if you want your site to retain the definition of quality that you like. Popular content is not necessarily the same as quality content.Consider a number of measures to prevent users from misusing the system:When the amount of content submitted each second is larger than what your staff can handle, you will have to rely on what is referred to as the “wisdom of crowds” to decide what is good content and what is not (spam, untrue stories, “lame stuff”, bad categorizations, etc.). This could possibly work, if each user evaluated the quality of an item of content isolated from what other users have already voted.However, it is not always the case that voting is done in isolation. Instead, crowd members communicate and affect each other’s qualitative judgment towards the lowest common denominator of opinion. The reason for this is the mix up of using measurable values when judging quality. The crowd has no wisdom: it will always be affected by the lowest common denominator of what others have voted.",
		"url": "https://ui-patterns.com/patterns/VoteToPromote"
	},
	{
		"pattern_id": "28",
		"pattern": "Flagging & Reporting",
		"pattern_header": "\n    The user wants to mark inappropriate content for moderation\n    ",
		"pattern_usage": "\n\tUse when your site is based on user generated content where you can’t possible moderate everything yourself because of the vast number of updates.\n",
		"description": "The user wants to mark inappropriate content for moderationA collection of 60 User Interface design patterns, presented in a manner easily referenced and used as a brainstorming tool.Let users report content for moderationFor sites based on user-generated content and user interaction, flagging and reporting is a vital design pattern. Let users help discover content necessary for administrators to review for removal or categorization. Users are most often happy to help with the overwhelming task of surveilling and managing user-generated content produced in a community.",
		"url": "https://ui-patterns.com/patterns/flagging-and-reporting"
	},
	{
		"pattern_id": "29",
		"pattern": "Pay To Promote",
		"pattern_header": "\n    The user wants to pay to prioritize own content above the regular content feed in order to gain increased reach and traction.\n    ",
		"pattern_usage": "\n\tUse when you want to provide users and businesses a chance to skip the content prioritization algorithm to get in front of the desired audience.\n\tUse when you want to provide users an opportunity to elevate content on feeds for a fee\n",
		"description": "\n  Alternate titles:\n  Boost post.\nThe user wants to pay to prioritize own content above the regular content feed in order to gain increased reach and traction.▲ Dating site OKCupid will boost the numbers of people who view your profile for a feeA collection of 60 User Interface design patterns, presented in a manner easily referenced and used as a brainstorming tool.Let users pay to promote their contentOn social platforms like Quora, Twitter, OKCupid, and LinkedIn, users can post content. Allow users to boost visibility of their own content by paying money. This form of advertising allows users to gain traction while maintaining a look and feel native to the platform.Sites like Quora and Facebook allow users to boost their posts by paying money, which in return gives them greater visibility in the content feed above the regular non-paid content.Dating-sites like OKCupid allow users to boost their profile in views. LinkedIn does the same albeit as part of a paid membership plan rather than by individual content like on Facebook.The Pay to Promote pattern is part of the native advertisement concept, which blends regular content with paid content. The two look the same with the only difference of the paid kind having a “Sponsored” label or “Advertisement” label.",
		"url": "https://ui-patterns.com/patterns/pay-to-promote"
	},
	{
		"pattern_id": "30",
		"pattern": "Navigation Tabs",
		"pattern_header": "\n    Content needs to be separated into sections and accessed using a flat navigation structure that gives a clear indication of current location. \n    ",
		"pattern_usage": "\n\tUse when there are between 2 – 9 sections of content that need a flat navigation mode.\n\tUse when section names are relatively short\n\tUse when you want the navigation to fill the entire width of a page\n\tUse when you want to provide a list of the highest available sections/subsections of the website\n",
		"description": "Content needs to be separated into sections and accessed using a flat navigation structure that gives a clear indication of current location. The Navigation tabs pattern is an extension of the desktop metaphor in which physical objects are represented as GUI elements. Navigation tabs are derived from the idea of folders in a file-cabinet and are thus familiar to the end userNavigation tabs provide a clear visual indication of what content can be found on a website and places the current location in context by highlighting it.",
		"url": "https://ui-patterns.com/patterns/NavigationTabs"
	},
	{
		"pattern_id": "31",
		"pattern": "Module Tabs",
		"pattern_header": "\n    Content needs to be separated into sections and accessed via a single content area using a flat navigation structure that does not refresh the page when selected. \n    ",
		"pattern_usage": "\n\tUse when there is limited visual space and content needs to be separated into sections\n\tUse when there are between 2 – 9 sections of content that need a flat navigation mode.\n\tUse when you need to keep user attention by circumventing page refreshing.\n\tUse when section names are relatively short\n\tUse when the content of each tab can be viewed separate from each other, and not in context of each other.\n\tUse when the content for each tab has similar structure\n\tUse when you need to show what tab is currently being viewed\n",
		"description": "Content needs to be separated into sections and accessed via a single content area using a flat navigation structure that does not refresh the page when selected. The Navigation tabs pattern is an extension of the desktop metaphor in which physical objects are represented as GUI elements. Navigation tabs are derived from the idea of folders in a file-cabinet and are thus familiar to the end userModule Tabs provide an easy way to show large amounts of similar structured data parted by categoriesTabs create a context for content, when a tab is selected the relevant content is loaded inside the content area.",
		"url": "https://ui-patterns.com/patterns/ModuleTabs"
	},
	{
		"pattern_id": "32",
		"pattern": "Breadcrumbs",
		"pattern_header": "\n    The user needs to know their location in the website's hierarchical structure in order to possibly browse back to a higher level in the hierarchy.\n    ",
		"pattern_usage": "\n\tUse when the structure of the website follows a strict hierarchical structure of similar formatted content.\n\tUse when the structure of the site is partitioned in to sections which can be divided into more subsections and so on.\n\tUse when the user is most likely to have landed on the page from an external source (another site deep linking to the web page in question). For instance from a blog or a search engine.\n\tUse when the page in question is placed fairly deep into the hierarchy of pages and when no other form of visual navigation can show the details of the same deep level.\n\tUse together with some sort of main navigation.\n\tDo not use on the topmost level of the hierarchy (typically the welcome page)\n\tDo not use alone as the main navigation of the website.\n",
		"description": "The user needs to know their location in the website's hierarchical structure in order to possibly browse back to a higher level in the hierarchy.▲ The breadcrumb at linux.com describes the depth of the hierachy you have indulged in.A collection of 60 User Interface design patterns, presented in a manner easily referenced and used as a brainstorming tool.Reveal the user’s hierarchical location and provide links to higher levels.Breadcrumbs serve as an effective visual aid, indicating the location of the user within the website’s hierarchy, making them a great source of contextual information for landing pages. Also, breadcrumbs allow for easy navigation to higher-level pages.",
		"url": "https://ui-patterns.com/patterns/Breadcrumbs"
	},
	{
		"pattern_id": "33",
		"pattern": "Shortcut Dropdown",
		"pattern_header": "\n    The user needs to access a specific section or functionality of a website in a quick way regardless of hierarchy.\n    ",
		"pattern_usage": "\n\tUse to shortcut an otherwise hierarchical structure of a website.\n\tUse when there are specific functionality or pages that are more frequently used than other parts of the website. Use the shortcut box to show these choices in order to shorten the path for the users.\n\tUse when you want shortcuts to pages that are possibly on different hierarchical levels of the page.\n\tCan also be used as navigation when short on space, although it is not advised.\n",
		"description": "The user needs to access a specific section or functionality of a website in a quick way regardless of hierarchy.The often hierarchical structure of a website can at times impede the path to specific functionality of a website. By adding a shortcut to the most frequently used functionality, the path can be shortened: the number of clicks can be lessened and the confusion decreased.",
		"url": "https://ui-patterns.com/patterns/ShortcutDropdown"
	},
	{
		"pattern_id": "34",
		"pattern": "Home Link",
		"pattern_header": "\n    The user needs to go back to a safe start location of the site.\n    ",
		"pattern_usage": "\n\tUse when users frequently enter the website through a page other than the home page. The user needs to be able to easily navigate to the starting point or front page of the website.\n",
		"description": "\n  Alternate titles:\n  Go Back to a Safe Place.\nThe user needs to go back to a safe start location of the site.It has become a standard in webdesign, that the site’s logo is always linked to a safe start location for the user. Normally, this is the front page of the site, but it could also be the front page of a section in the site, or some other safe start location for the user.",
		"url": "https://ui-patterns.com/patterns/HomeLink"
	},
	{
		"pattern_id": "35",
		"pattern": "Fat Footer",
		"pattern_header": "\n    Users need a mechanism that will enable them to quickly access specific sections of a site or application bypassing the navigational structure.\n    ",
		"pattern_usage": "\n\tUse to shortcut an otherwise hierarchical structure of a website.\n\tUse when there are specific pages or functions that are more frequently used than others parts of the website. Use the shortcut box to show these choices in order to shorten the path for the users.\n\tUse when you want shortcuts to pages that are possibly on different hierarchical levels of the page.\n\tCan also be used as navigation when short on space, although it is not advised.\n",
		"description": "\n  Alternate titles:\n  Sitemap Footers.\nUsers need a mechanism that will enable them to quickly access specific sections of a site or application bypassing the navigational structure.▲ The fat footer of mint.com has a high focus on conveying a sense of trust in that the service is secure.A collection of 60 User Interface design patterns, presented in a manner easily referenced and used as a brainstorming tool.End a page by providing relevant links to other sections of your site.Add the same footer on all pages of a website – with the same layout in the footer on all pages. Typically, these things are included in fat footer designs:Keep visitors on your site for longer: end one experience by starting a new one. Provide easy and natural ways for users to continue their journey. By adding a shortcut to the most frequently used pages and functions, the path can be shortened and confusion can be decreased.The hierarchical structure of a website can at times impede the path to specific page or function of a website. By adding a shortcut to the most frequently used pages and functions, the path can be shortened: the number of clicks can be lessened and the confusion decreased.A fat footer isn’t right for every site or for every company. Consider asking these when creating a footer:1 Fat footer round-up at UX Booth.",
		"url": "https://ui-patterns.com/patterns/FatFooter"
	},
	{
		"pattern_id": "36",
		"pattern": "Notifications",
		"pattern_header": "\n    The user wants to be informed about important updates and messages\n    ",
		"pattern_usage": "\n\tUse when you want to draw attention to important updates or messages.\n\tDo notify users about about time-sensitive information directed specifically at them.\n\tDo not notify users about information that is currently on screen (e.g. active chat conversations)\n\tDo not notify users about technical operations that do not require user involvement (such as syncing)\n\tDo not notify users about error messages that can be resolved without user action\n",
		"description": "The user wants to be informed about important updates and messages▲ Notifications at Meetup.com combines several content types.A collection of 60 User Interface design patterns, presented in a manner easily referenced and used as a brainstorming tool.Inform your users about relevant and timely events.Notify users about important updates while they are focused elsewhere. Adjust the rate and relevancy of notifications aptly, as they can be interruptive. Empower users to disable or change notifications in their settings. Create personalized, summarized, and timely notifications that may serve as entry points to more detailed information.Use notifications to draw attention to important updates: messages from friends, new friend requests, relevant nearby offers, and many more.Once a users has consumed a notification, he or she should not see it again. Similarly, users should be able to retrieve already consumed notifications on another device more suitable for consuming the content the user was notified about. Notifications should be synced to all of a user’s devices.Notifications are obtrusive and interruptive in its nature. It is used to direct the user’s attention to important events while being focused elsewhere. Make careful considerations as to when to interrupt users. Do not notify users about information already on screen (e.g. active chat conversations), technical operations not requiring user involvement, and error states that can be resolved without user action.Make notifications dismissible and let users disable or change the rate of notifications in your products settings.Combine multiple notifications of the same type into a single summary notification showing how many notifications of a particular kind are pending. Consider expanding the notification, providing detailed information of the summarized notifications, once clicked.Bundle action buttons with notifications, for users to quickly handle the most common tasks for a particular notification, without opening the originating screen. Let actions be clear and unambiguous and only provide them if they do not duplicate the default action. Actions should be meaningful and time-sensitive, suit the content, and allow the user to accomplish a task.1 Notifications Design Pattern at the Google Material Design Spec",
		"url": "https://ui-patterns.com/patterns/notifications"
	},
	{
		"pattern_id": "37",
		"pattern": "Modal",
		"pattern_header": "\n    The user needs to take an action or cancel the overlay until he can continue interacting with the original page\n    ",
		"pattern_usage": "\n\tUse when you want to interrupt a user’s current task to catch the user’s full attention to something more important.\n\tDo not use to show error, success, or warning messages\n",
		"description": "\n  Alternate titles:\n  Modal Window.\nThe user needs to take an action or cancel the overlay until he can continue interacting with the original page▲ Newsletter signup form presented in an interruptive modal window at the Invision blog.A collection of 60 User Interface design patterns, presented in a manner easily referenced and used as a brainstorming tool.Introduce a mode in which users cannot interact with your application until the mode is closed. Interrupt the user’s attention and halt all other actions until a message is dealt with or dismissed.Matching button text with the title of the modal increases the feeling of familiarity. As modals introduce a new inturrupting mode, chances are that users won’t connect the action they just performed with the modal popping up. Make sure they know where the modal is coming from.Allow users to escape the mode by letting them close the modal window when they need to. Popular conventions for close buttons is an ‘X’ icon in the top right corner and/or a ‘Close’ or ‘Cancel’ button at the bottom of the modal window. The ESC key is also often a conventional keyboard shortcut to closing modals – so is clicking outside the modal window.Although effective in focusing attention, introducing multiple modes comes with the risk of introducing mode errors where the user forgets the state of the interface and tries to perform actions appropriate to a different mode.Modals have been considered a UI anti-pattern. The main reason lies in the definition of a modal window: A window that prevents the user from interacting with your application until she closes the window1. Modal windows interrupt users and force them into doing a specific action. Arguably, in most cases, there is no need to force users into specific actions. As a result, modal windows introduce unnecessary pain points for your users.The alternative is modeless interfaces. Interfaces that allow users to change their mind at any point. Interfaces that do not force users into a specific set of actions.Also, modals do not work well on mobile devices as they take up screen space and introduce additional user interface elements.1 Modal WIndow at Wikipedia.org2 Design patterns for replacing modal windows by L. Mathis",
		"url": "https://ui-patterns.com/patterns/modal-windows"
	},
	{
		"pattern_id": "38",
		"pattern": "Vertical Dropdown Menu",
		"pattern_header": "\n    The user needs to navigate among sections of a website, but space to show such navigation is limited.\n    ",
		"pattern_usage": "\n\tUse when there are between 2 – 9 sections of content that need a hierarchical navigation structure.\n\tUse when your functionality resembles one of a desktop application. Imitate the metaphor.\n\tDo not use when there is a need to single out the location of the current section of the site. Then use the Navigation Tabs.\n",
		"description": "The user needs to navigate among sections of a website, but space to show such navigation is limited.A list of main sections is listed on the same horizontal line. Once the user has his mouse cursor over one of the list items, a drop-down list of new options is shown below the list item the mouse cursor is pointing at. The user can then follow the now vertically extended list item down, to select the menu item he wants to click.Once the user removes the cursor from the box of drop-down’ed options, the box disappears. He can then put his mouse cursor over another list item, whereafter the process starts over.As humans, we do not always act perfectly as the system would like us to. To cope with human errors and to guide us to act as you would like us to, you can implement the following:Drop-down menus save space. This is the main reason for using them. Otherwise, drop-down menus are not regarded as a technique that increases usability, as they can often be difficult to use.Flyout menus allow for only showing top levels of the page’s hierarchy permanently, while still giving the option to show deeper levels on mouse over.",
		"url": "https://ui-patterns.com/patterns/VerticalDropdownMenu"
	},
	{
		"pattern_id": "39",
		"pattern": "Accordion Menu",
		"pattern_header": "\n    User needs to navigate among a website's main sections while still being able to quickly browse to the subsection of another.\n    ",
		"pattern_usage": "\n\tUse when you want the benefits of a normal sidebar menu, but do not have the space to list all options.\n\tUse when there are more than 2 main sections on a website each with 2 or more subsections.\n\tUse when you have less than 10 main sections\n\tUse when you only have two levels to show in the main navigation.\n",
		"description": "User needs to navigate among a website's main sections while still being able to quickly browse to the subsection of another.Accordion menus are often used as a website’s main navigation. In this way, it acts much like Navigation Tabs, as menu items are collapsed when a new panel is clicked. Where the Navigation Tabs are most often used horizontally, Accordion menus are most often used vertically.Accordion menus can however also function quite well as sub-navigation for a specific section of a website.",
		"url": "https://ui-patterns.com/patterns/AccordionMenu"
	},
	{
		"pattern_id": "40",
		"pattern": "Horizontal Dropdown Menu",
		"pattern_header": "\n    The user needs to navigate among sections of a website, but space to show such navigation is limited.\n    ",
		"pattern_usage": "\n\tUse when there are between 2 – 9 sections of content that need a hierarchical navigation structure.\n\tUse when your functionality resembles one of a desktop application. Imitate the metaphor.\n\tDo not use when there is a need to single out the location of the current section of the site. Then use the Navigation Tabs.\n",
		"description": "The user needs to navigate among sections of a website, but space to show such navigation is limited.A list of main sections are displayed as links in a single vertical strip. When a user hovers their cursor over a list item or clicks a list item, a sub list is displayed (usually adjacent and below). The user can then follow the now horizontally extended list item down, and select the subsection they are interested in.Traditionally, when the user’s cursor leaves a drop down menu, the menus are no longer visible. However, this is an unforgiving interaction method.As humans, we do not always act perfectly as the system would like us to. To cope with human errors and to guide us to act as you would like us to, you can implement the following:There are many different kinds of drop-down menus out there. Some are purely javascript. These kinds of drop-down menus do not work well with search engines. To let the search engines index your page, you would want to have the menu formatted in HTML from the beginning of the page load, rather than building it in javascipt client-side after the page has loaded.Drop-down menus save space by organising and concealing information. Drop-down menus are not regarded as a technique that increases usability, as they can often be difficult to use.Flyout menus allow for only showing top levels of the page’s hierarchy permanently, while still giving the option to show deeper levels on mouse over",
		"url": "https://ui-patterns.com/patterns/HorizontalDropdownMenu"
	},
	{
		"pattern_id": "41",
		"pattern": "Adaptable View",
		"pattern_header": "\n    You want to let the site's presentation of content fit the specific needs of the user.\n    ",
		"pattern_usage": "\n\tUse when a considerable part portion of your potential users have specific technical needs concerning how content is presented. Examples are mobile browsers, small screen resolutions, and monochrome monitors.\n\tUse when a considerable part of your potential users have specific needs to regarding accessibility and how content is presented due to disability. Examples are colour-blindness or poor vision.\n\tUse when your users need to control font size but may not know how to use the browser’s built in font resizing settings.\n\tUse when you want to give users the ability to switch between from a mobile version of a site to the full featured version. It is for instance not all iPhone users who actually like to use tailored iPhone versions of websites instead of the full-featured browser version.\n",
		"description": "You want to let the site's presentation of content fit the specific needs of the user.▲ Increase the font size on the page.Provide a mechanism to switch or alter the default style of a page so that it fits the specific needs of the user.When catering to alternative browsers such as mobile phone browsers, the view to present can often be found looking at the incoming user agent. In this case, a manual mechanism to switch styles might seem obsolete, but it is good practice to allow access to all views of a site regardless of how the user is browsing it.Provide a manual control to allow users to switch/alter the default style of a page so that it better fits their specific needs. It is for instance not all iPhone users who actually like to use tailored iPhone versions of websites instead of the full-featured browser version.It is a good practice to allow for permanence of the user’s preferred configuration. This will prevent the user from having to make the same adjustment each time a page reloads.By providing a mechanism to present different views of content to the user, you can tailor usability and the experience you want to give your users to their specific needs.At first it may seem that a style adjuster is a superfluous feature that falls one step short of showing off. After all, don’t users already have control over the presentation of content through the means of user stylesheets and the browser’s built in font resizing? Well, just because a user has the ability to use these tools, doesn’t mean that they have the knowledge or willingness to get their hands dirty with them.Enter the on page adjustable style control. It can give a web designer the ability to extend a browser’s accessibility support and provide them in a much more convenient way.Beyond accessibility concerns, style adjusters can also cure some of the common annoyances that almost everyone deals with. One example of this is when a site forces a user to use the mobile version. A simple button that switches the site to the full featured version is enough to alleviate the feeling of being trapped.",
		"url": "https://ui-patterns.com/patterns/AdaptableView"
	},
	{
		"pattern_id": "42",
		"pattern": "Article List",
		"pattern_header": "\n    The user needs guidance in finding editorial content of interest, which hierarchical navigation alone does not accomplish.\n    ",
		"pattern_usage": "\n\tUse when you want to guide the user to content that appeals or is interesting to him or her.\n\tUse when the content of your site that a temporal navigation device such as a news article or a seasonal piece like a story on Christmas cooking.\n\tDo not use when the content you want to guide the user to is not suited to be presented as a story.\n",
		"description": "\n  Alternate titles:\n  Media list.\nThe user needs guidance in finding editorial content of interest, which hierarchical navigation alone does not accomplish.▲ Each article at alistapart.com receives a large header and author line followed by an introductory text written especially for the front page.An article lists is a great means of communicating for inspiration. It allows the user to quickly scan a list of articles that appeal or interest them.When designing a good article list, there are several things you should take into consideration. Consider these design tips wisely, as overdoing them may trap you into committing some of the common design mistakes listed later in this pattern.The main purpose of the article list is to lure users to click on a story – so let them find one that they find interesting! One of your proudest objectives as a designer should be to get out of the way and let the user perform his or her task. The interface you design should afford scanning.Too many ornaments and other unnecessary design elements hinder scanning. They have no other purpose than showing off.Pagination is overrated for two reasons:Long lists are not bad – as long as you can scan it easily and without effort.Category labels set the scene for what the user can expect. They communicate what the title of the article sometimes can’t which helps set the context of the title.An article with the title “Chanel goes crazy” can have several different meanings. If the article is about Chanel’s last economic quarter, the title possibly conveys a rising crisis for the company, however if the article is about Chanel’s new designer collection, the meaning of the title is totally different.In this way, the category label help set the user’s expectations for what is to be found behind the link. By labelling the story with either “Fashion” or “Financial news”, the correct meaning of the title is set in stone.In the example below, the category label “Movies” let us know that the interview with “Alexander Olch” is about his new movie and the category label “Literature” lets us know that the picture with roller-skates is not actually about the rollerskating sport.On news sites, there are often many articles about a single subject. News is published in fragments as it comes in. To accommodate for this, many news sites not only display the main article on the front page, but also list related article to the subject in the near vicinity (most often below).There are many aspects of a story which different people find interesting. If the main story will not catch the attention of a specific reader, there is a good chance another article on the same subject will.Also, the list of articles on the same subject works as a great starting point for exploring the full story, and thus provides a good opportunity to increase the pages per visit.\nAt the Danish television company, TV2, the main article is followed by the a list of the next 3 articles from the same category.If an article is well commented, we we are lead to believe that it must be a more interesting read than articles with less comments. This effect is called social proof. We judge the popularity of something by the actions of others.If you have a high comment activity on your site, listing comment count can help people stick around: “this must be an interesting site as people keep on commenting”. If your site has little or no comments on articles, you will communicate the opposite by showing comment count on article lists.Everything is about the context. Always! Consider what kind of articles you are presenting. The author is relevant to an article teaser if it is opinionated – just like comment count is relevant to an article teaser if there are lots of them.If you want to attract attention to articles you believe will interest a lot of people, or that you put a lot of work into (the first is way more important), it can be a good idea to find a way to highlight the article.One kind of highlighting is with an attached label in bright colors, another is changing the background color of the article list item. A third option is to find a prominent position for the article: e.g. at the top of the list with a larger thumbnail image.Remember to call out for action! Much has been said about the old-school “click here” call out, but whoever used it was on to half of the truth. The bad thing about “click here” is that it does not set expectations: “what is going to happen when I click on it?”. The good thing about “click here” is that it tells people what they should do. It calls out for action and does not require the user to think.To get the call out right, you need to set expectations. If the user is taken to watch a video, then have a link saying “watch the video”. If you print out the first paragraph of text, then have a link that says “read more”.You can also include call-outs in parts of the teaser other than just the text link. On video teasers a “play” icon placed over a thumbnail picture work great.\nCNN.com has a great combination of video stories and regular text stories in this front page article list.The visual hierarchy between the elements of an article teaser is important. For scanning purposes, the shorter heading affords better scanning than the subheading does. When the visible difference between the header and the subheader is too little, the user has to spend unnecessary energy on decoding which is which.Make sure that the user can click on any part of the article teaser to go to the article itself: title, image, description, comment count, and call out. People are used to being able to click anywhere to go where they want.If your site does not have much comment activity, you will communicate that you have a boring site with unengaged users if you list the comment count for a bunch of articles with no comments.For an article list to work, you must provide a series of information for it to be useful. As always, everything depends on the context. If your articles are opinionated and more editorial than they are a news story, then the author is an important part. If you have different types of content on your site (news stories, quizzes, battles, etc.), then you would want to label your articles accordingly so that you set expectations.Regardless of the context, there seems to be some details that are always important:A series of details that are common, but are not present in all lists.On a website delivering editorial content, the article teaser is one of the most important design elements besides the design of the article itself. The article teaser is part of an article list, and its main purpose to lure visitors to keep on browsing.The most pure form of article lists is seen on magazine and news websites, but the convention is also relevant to all other sites trying to tease another click out of the visitor.It should be no surprise that you should put yourself in the shoes of the user. An article that will get many hits or become publicly popular with your audience is not necessarily the one you spend the most time on, or the one that you find interesting. Constantly evaluate an article’s value from the reader’s perspective when deciding to highlight it or not.Put yourself in the users’ shoes when you decide on what data you want to present to them. Do you want to have different kinds of article list items – for instance one for galleries, one for blog posts, one for events, and one feature articles? It might make sense. Think about how you can make it easier for the user and stop forcing the user to think like you.",
		"url": "https://ui-patterns.com/patterns/ArticleList"
	},
	{
		"pattern_id": "43",
		"pattern": "Tagging",
		"pattern_header": "\n    Items need to be labelled, categorized, and organized using keywords that describe them. \n    ",
		"pattern_usage": "\n\tUse when the content on your website is possibly mapped into multiple categories and does not necessarily only fit into one hierarchical category.\n\tUse when you want users to contribute data to your website and let them organize their contributed data themselves.\n",
		"description": "Items need to be labelled, categorized, and organized using keywords that describe them. ▲ When adding tags to a video at Vimeo, tags are separated by commas, and each tag are upon submission added  to a horizontal line below the input field. Each tag can easily be removed separately.A collection of 60 User Interface design patterns, presented in a manner easily referenced and used as a brainstorming tool.Let users associate multiple topics with a piece of content. Allow users to add appropriate keywords to categorize their own content in a non-hierarchical way. Let users use hashtags to integrate tagging into the content itself.Allow keywords to be associated with items on a website/application such as blog articles, ecommerce products and media. Use terms that categorically describe these items. Permit these items to be found in a search using these keywords. Let contributors of information add keywords to the content they submit. Keywords can be displayed as links that aid in finding items with matching keywords.Tagging helps make it easier for users to find their own content and for their peers to discover content related to their interests.Tags are relevant keywords associated with or assigned to a piece of information. Tags are often used on social websites, where users can upload their own content. Here, tags are used to let users organize and categorize their own data in the public sphere. In this way, tags can be seen as a bottom-up categorization of data rather than a top-down categorization of data, where the creators of the site define the hierarchy data is submitted to.",
		"url": "https://ui-patterns.com/patterns/Tag"
	},
	{
		"pattern_id": "44",
		"pattern": "Categorization",
		"pattern_header": "\n    The user wants to make sense of content by browsing and grouping them into categories\n    ",
		"pattern_usage": "\n\tUse when the content on your website editorially maps down to a main category or section\n",
		"description": "\n  Alternate titles:\n  Section.\nThe user wants to make sense of content by browsing and grouping them into categories▲ Buzzfeed has organized their content into both top-down hierarchical categories (Food, DIY, Quizzes, etc.) and through bottom-up tags (LOL, omg, win, cute, etc.)Let users categorize content into a hierarchal section. Allow users to select a hierichal, and possibly nested, category for their content that matches the hierichal categorization of the site itself.Where tagging works to explain tiny distinctions and details in content, categories represent broader and more easily explained distinctions.Having multiple categories help to wall section off from each other and help suggest what content is to be found, needed and appropriate for a site.Categorization is the process in which ideas and objects are recognized, differentiated, and understood1. Categories help us make sense of the world faster and more easily. We seek to categorize all we experience in an attempt to explain how the world works – how our knowledge is represented in the real world.1 Categorization on Wikipedia.org",
		"url": "https://ui-patterns.com/patterns/categorization"
	},
	{
		"pattern_id": "45",
		"pattern": "Pagination",
		"pattern_header": "\n    The user needs to view a subset of sorted data in a comprehensible form.\n    ",
		"pattern_usage": "\n\tUse when it is unsuitable to display all the data on a single page/screen.\n\tUse when the dataset is in some way ordered.\n\tDo not use when you don’t want the user to pause for navigating to the next page.\n",
		"description": "\n  Alternate titles:\n  Paging.\nThe user needs to view a subset of sorted data in a comprehensible form.▲ Creative pagination design at webdesignledger.comA collection of 60 User Interface design patterns, presented in a manner easily referenced and used as a brainstorming tool.Break a complete dataset into smaller sequential parts and provide separate links to each.Provide pagination control to browse from page to page. Let the user browse to the previous and next pages by providing links to such actions. Also, provide links to the absolute start and end of the dataset (first and last).If the dataset has a known size then show a link to the last page. If the dataset’s size is variable then do not show a link to the last page.Reduce perceived complexity by parting large datasets into smaller chunks that are more manageable for the user. Significant technical performance can be achieved by only having to return subsets of the overall data.First and foremost, pagination parts large datasets into smaller bits that are manageable for the user to read and cope with. Secondly, pagination controls conveys information to the user about, how big the dataset is, and how much is left to read or view and how much have they already viewed.Pagination provides the user with a natural break from reading or scanning the contents of the dataset, and allows them to re-evaluate whether they wish to continue looking through more data, or navigate away from the page. This is also why pagination controls are most often placed below the list: to provide the user with an option to continue reading through the larger dataset.",
		"url": "https://ui-patterns.com/patterns/Pagination"
	},
	{
		"pattern_id": "46",
		"pattern": "Cards",
		"pattern_header": "\n    The user needs to browse content of varying types and length\n    ",
		"pattern_usage": "\n\tUse to display content composed of different elements\n\tUse to showcase elements whose size or supported actions vary – like photos with captions of variable length.\n\tUse when displaying content that…\n\t\n\t\tAs a collection, consists of multiple data types (images, movies, text)\n\t\tDoesn’t require direct comparison\n\t\tSupports content of highly variable length (captions, comments)\n\t\tContains interactive content\n\t\n\tUse to visually group digestible portions of information that call for an action; like accepting a request, or accessing more details.\n\tUse to gather various pieces of information about a single subject to form one coherent piece of content.\n\tCards are better suited when users browse for information than when they search.\n\tCards work best for collections of heterogeneous items (when not all the content is of the same basic type).\n",
		"description": "The user needs to browse content of varying types and length▲ Pinterest uses cards to group heterogenous items together: each card differs in amount of information and occupies a different amount of vertical space.A collection of 60 User Interface design patterns, presented in a manner easily referenced and used as a brainstorming tool.Display entry points to detailed and varied content in similar shapes. A card could contain a photo, text, and a link about a single subject.Consider only scrolling collections of cards in one direction: horizontally or vertically. Card content that exceeds the maximum card height (if scrolling vertically) or width (if scrolling horizontally) is truncated and does not scroll, but can be expanded. Once expanded, a card may exceed the maximum height/width of the view.A card typically includes a few different types of media, such as an image, a title, a short summary and a call-to-action button.One of the most important things about cards, is their ability to be manipulated almost infinitely.  They can be turned over to reveal more, stacked to save space, folded for a summary – and expanded for more details, sorted, and grouped.We can hint what is on the back side or that the card can be folded out. The resemblance of Cards to the physical world makes them a great conceptual metaphor for which we can easily relate all sorts of manipulations.Browsing is a large part of interaction, and users want to be able to quickly scan large portions of content and dive deep into their interests. Users can experience difficulty browsing text-heavy sites as displaying extra details for each item can clutter the screen and prevent efficient scanning.Cards are great for showcasing aggregated elements whose size or supported actions vary. Each card serves as an entry point to more detailed information, so it shouldn’t be overloaded with extraneous information or actions. They are dismissible, swipeable, sortable, and filterable.Cards allow you to present a heavy dose of content in a small and digestible manner: they divide all available content into meaningful sections, present a summary and link to additional details. A single card is a container that displays various parts of related information, from which users can get even more information.Cards help chunk data into content that is more easily aids scanned. Furthermore, cards are:As with any design technique, a card-style interface is not a silver bullet for perfect usability.However, there are some cases where cards are especially applicable:This is usually the case when you have:There are also cases, where it’s better to opt for an alternative solution to cards:The most common pitfall of card-based design is the danger of visual overload. As cards are often used for\nsites which contain loads of information, they can end up producing a cluttered feel (especially on a large viewports), making it harder to parse the layout visually.There are a few things that can improve card design.Modern digital cards aren’t pure skeuomorphic concept, but quite often, using consistent metaphors and principles borrowed from physics help users make sense of interfaces and interpret visual hierarchies in content. In the case of cards there are couple of things you can do:1 Why Cards are the future of the web by Paul Adams2 Cards – Components from the Google Material Design design spec3 Play Your Cards Right: Exploring the Cards Trend in Web Design at awwwards.com5 Designing card-based user interfaces by Nick Babich6 Best practices for cards by Nick Babich7 Cards: UI-Component Definition by Page Laubheimer8 The Complete Guide to an Effective Card-Style Interface Design by Carrie Cousins9 Twitter, canvases and cards by Benedict Evans",
		"url": "https://ui-patterns.com/patterns/cards"
	},
	{
		"pattern_id": "47",
		"pattern": "Carousel",
		"pattern_header": "\n    The user needs to browse through a set of items and possibly select one of them\n    ",
		"pattern_usage": "\n\tUse when you have a large set of items to show, but want to let the user concentrate his or her attention only on a select few items at a time\n\tUse when you want to tease the user by letting him or her know that there are more items available than what is currently shown.\n\tUse when you do not have enough space to show all items at once.\n\tUse when you have highly visual items to display such as movie posters, album covers, products etc.\n",
		"description": "\n  Alternate titles:\n  Slideshow.\nThe user needs to browse through a set of items and possibly select one of themArrange a set of items on a horizontal line where each item preferably has an thumbnail image attached (or the item is only represented by the image). Even though the list of items is long, only 3-8 images are shown at the same time.If the user wants to view the rest of the items on the list, he or she must click one of the navigational controls such as an arrows pointing either left/right or up/down. Once one of the arrow is clicked, the subsequent “view” is loaded, a transitional animation moves the requested item into focus. The user can in this way browse the list of items back and forth in a circular fashion – hence the name Carousel.A carousel optimizes screen space by displaying only a subset of images from a collection of images in a cyclic view.The navigational controls on a carousel suggests additional content that is not currently visible, this encourages the user to continue exploring. The carousel pattern can in this way be used as an extra incentive for the user to browse through all items of the list, as we as humans do not feel comfortable by not being aware of the “full picture”.As the carousel is circular, the start of the list will be shown after the user has reached the end. This behavior encourages the user to continue browsing through the list.",
		"url": "https://ui-patterns.com/patterns/Carousel"
	},
	{
		"pattern_id": "48",
		"pattern": "Progressive Disclosure",
		"pattern_header": "\n    The user wants to focus on the task at hand with as few distractions as possible while still being able to dig deeper in details if necessary\n    ",
		"pattern_usage": "\n\tUse when you want to reduce feelings of being overwhelmed\n",
		"description": "\n  Alternate titles:\n  Revealing Interfaces.\nThe user wants to focus on the task at hand with as few distractions as possible while still being able to dig deeper in details if necessary▲ Progressive Disclosure is utilized in several ways in the Youtube comments design. The most relevant comments are highlighted, but more can be shown upon request, if a thread is found interesting. Similarly, the user can switch from viewing "Top Comments" or "Newest first".A collection of 60 User Interface design patterns, presented in a manner easily referenced and used as a brainstorming tool.Present only the minimum data required for the task at hand.Move complex and less frequently used options out of the main interface. Reveal only essential information and help manage complexity by disclosing information and options progressively.Examples of Progressive Disclosure are plentiful. A simple “Show more” link, revealing more information about something, is one of the simplest forms of Progressive Disclosure.Maintain the focus and attention of users by reducing clutter, confusion, and cognitive workload. Ramp up the experience, moving from simple to complex, from abstract to specific. Progressive Disclosure defers advanced or rarely used features to a secondary screen, reducing cognitive load on the current task at hand. This will help making your application easier to learn and less error-prone due to fewer distractions.By showing only the information or features relevant to the user’s current activity and delaying other information until it is requested, the user can focus on the main task at hand. By hiding more complex or infrequently used, the interface is de-cluttered; by revealing them only as they are needed, you help users perform a complex, multi-step process on a single page2.You want to show only essential information in the first step, but still invite to take the next. When a user completes a step, reveal information needed for the next step, keeping all previous steps visible. By keeping previous steps visible, you allow users to change what has been entered. Like in a Wizard, data entered in the current step can affect the behavior of the next.1 Progressive Disclosure at Wikipedia.org2 10 UI Design Patterns you should be paying attention to by Janko Jovanovic3 Progressive Disclosure by Jakob Nielsen",
		"url": "https://ui-patterns.com/patterns/ProgressiveDisclosure"
	},
	{
		"pattern_id": "49",
		"pattern": "Continuous Scrolling",
		"pattern_header": "\n    The user needs to view a subset of data that is not easily displayed on a single page
\n
\nContent needs to be presented to users as a subset of a much larger seemingly endless set, in a way that will aid them in consuming content without effort. 
\n\n    ",
	"pattern_usage": "\n\tUse when there are more data to show than what would fit on a normal page\n\tUse when navigating to a second page of data takes away too much attention from the content\n",
		"description": "\n  Alternate titles:\n  Infinite Scrolling,  Endless Page,  Endless Scroll.\nThe user needs to view a subset of data that is not easily displayed on a single page
\n
\nContent needs to be presented to users as a subset of a much larger seemingly endless set, in a way that will aid them in consuming content without effort. 
\nA collection of 60 User Interface design patterns, presented in a manner easily referenced and used as a brainstorming tool.Automatically load the next set or page of content as the user reaches the bottom of the current pageIn contrast to the Pagination patterns, the Continuous Scrolling pattern has no natural break. When using pagination patterns, a decision to only show a subset of data at a time and then let the user request more data if wanted is chosen. With the Continuous Scrolling, new data is automatically retrieved as the user has scrolled to the bottom of the page. It thus appears as if the page has no end, as more data will be loaded and inserted into the page each time the user scrolls to the bottom of page.Eliminate the need for clicking “next page” by creating the effect of an infinitely scrolling page by constantly loading in new content as the user scrolls to the bottom of a page. Though great for the user experience, this pattern introduces bookmarking issues.The problem with using pagination for browsing between subsets of data is that the user is pulled from the world of content to the world of navigation, as the user is required to click to the next page. The user is then no longer thinking about what they are reading, but about how to get more to read. This breaks the user’s train of thought and forces them to stop reading. Using pagination creates a natural pause that lets the user reevaluate if he or she wants to keep going on or leave the site, which they a lot of the time do.It can be argued that Continuous Scrolling can be frustrating for the user, as there is no natural pause. The user will ask himself: When am I done reading?",
	"url": "https://ui-patterns.com/patterns/ContinuousScrolling"
	},
	{
		"pattern_id": "50",
		"pattern": "Archive",
		"pattern_header": "\n    All the items in a collection need to be organized in a chronological order.\n    ",
		"pattern_usage": "\n\tUse when you have more than 10 to 20 items to display\n\tUse when you have a data set that spans over a long time frame and want to let the user browse the items in the dataset by chronological order.\n\tUse when displaying all items in a dataset confuses the user rather than giving an overview\n\tUse when it makes sense to order items in a dataset by dates\n\tUse when you want to provide an easy way to browse your entire database of articles.\n",
		"description": "All the items in a collection need to be organized in a chronological order.ist the items in your dataset in chronological order and provide suitable headlines to match the amount of items. If you for instance have 10 items per year, it does not make much sense to partition these 10 items into months. If you have 100 items a year, but also have months without any items, it might not make sense to list all months.Either you can provide links to pages that shows all items per time period, or simply make a list of links to each item directly on the main archive page.Use the archive pattern when it makes sense to list items in chronological order. Listing items in an archive format, makes it easy for the user to explore how a website has evolved over time and what has influenced the most current items.",
		"url": "https://ui-patterns.com/patterns/Archive"
	},
	{
		"pattern_id": "51",
		"pattern": "Event Calendar",
		"pattern_header": "\n    The user wants to find events of interest happening in a certain period of time.
\n
\nEvents need to be presented to users in a visually concise model that abstracts date and time.\n    ",
	"pattern_usage": "\n\tUse when you want to allow your users to navigate between items that are based in a certain period of time.\n\tDo not use if the content of your website does not each have its root in a given period of time or time-stamp.\n",
		"description": "\n  Alternate titles:\n  Upcoming Events, Schedule,  Itiniary.\nThe user wants to find events of interest happening in a certain period of time.
\n
\nEvents need to be presented to users in a visually concise model that abstracts date and time.▲ The event calendar at Facebook is arranged into buckets of time: Today, tomorrow, this week, and this month.A collection of 60 User Interface design patterns, presented in a manner easily referenced and used as a brainstorming tool.Separate content into meaningful buckets of time. Organize events into groups of “tonight”, “next week”, “next month”, or merely September or October. Show more details for an event as it nears today and focus on scannability and filtering the further away it is.The most common ways to browse an event calendar is either through a text list of events, through a month table, or a combination of both.The text list is great for providing a view of events for a given period of time: for a certain day, week, month, or simply the nearest future. With a packed calendar, it can however be overwhelming to get and overview of everything.The calendar box (month table) is good for browsing between days and for getting an overview of when the action happens. In isolation it however reveals close to no information about the events in the calendar. Furthermore, the boxed calendar renders almost useless without data. If you only have one or two events a month, the usefulness of the calendar box becomes minimal – left to merely showing when the next weekend is up.When combined, the calendar box can be used as a device for navigating through periods of time, while text lists can show details. Again, the boxed month calendar renders useless if you only have 2 events a month, where you might be better off with a mere list of years or no time navigation.For an event calendar to work, you must provide a range of different types of information for it to be useful. It all depends on the context. If you are listing concert events then ticket prices, availability of tickets, and band name a important. For a conference calendar, the presenter, room name, conference track name, and duration of the talk might be important.Regardless of the context, there seems to be some details that are always important:An event calendar is a list of time-based items. Their base in time is a great tool for grouping, filtering, and sorting.As humans, we don’t think in dates. We think in “buckets” of time: tonight, this weekend, next week, in a few weeks, next month, or this year.Parting your events into buckets of time that make sense to the user is a great way to provide the user with an overview. Part events into groups of “tonight”, “next week”, or “next month”.Consider experimenting with different designs for each bucket of time. The user might be more interested in details this week than next month. Listing the starting time in the list of events this week might make more sense than listing it for events next month. It’s all about the situation the user is in when he or she browses your calendar. Take a moment to think the design through from the user’s perspective.The most common design mistakes of event calendar design that I most often run into are:Designers are working people. They spend most of their day designing – but also a recognizable part of the day in Outlook, Google Calendar, or iCal. They use calendars for planning their daily schedule and for planning the next few months with the help of these calendars. For this purpose, boxed calendars are great. Unfortunately a lot of designers forget to realize that these types of calendar designs are made for day-to-day planning (for which they work well) – they are not designed to provide an overview of upcoming events: the main purpose of the event calendar.I browse event calendars in different contexts. One context is when I want to find out if anything interesting is happening over the next few weeks or in the next month. In this context, I am not interested in when the event starts, but merely what date it is. Once I have decided to go to an event, I will use the event calendar with a different purpose: to check up on the details – was it 19: 00 or 20: 00 that it started?Another and perhaps even more critical flaw is when events have similar titles. The example below shows a list of the same class happening several times a day. The title of the class stays the same, but the time doesn’t. With missing start times, the event list is useless.The event list at live.cnn.com does a great job listing start times that are easy to scan as well:If I am going to a concert, the venue makes an important difference in my decision to go or not. I want to know if it’s going to be cramped and intimate, big and bold, or if it’s that place with the crappy sound.Take a moment to think about what makes the kinds of events you are designing for special. Prioritize the information that let your users scan events and decide whether it is of interest or not.Don’t make me think. Make it easy for me to scan an event based on the data that is important for the types of events you list. If one event is bigger or more important than another, then let the user know by highlighting it. The same goes for events that I might already have checked out or even better – have decided to attend.Another great way of highlighting an important event is through social metrics such as ratings, attendance count, etc. Showing an event’s rating through for instance stars makes it easy to quickly scan the list for the highest rated event. Similarly, a larger attendance count will have a larger number and by that be easy to spot. You can also try to play around with different font sizes, text colors, and backgrounds (shades of gray?) to highlight certain events.A list that just goes on and on without any visual prioritization or grouping renders a calendar useless. If a list is too big to show in a few folds, consider how you can divide it up based on either time constraints (buckets of time) or other data like category, venue, genre, or rating.Make it possible for me to only view the events I am interested in. If I like funk music, then let me browse only funk concerts. If I want to see what bands are playing at my favorite local club, then let me browse venues. If I only have time next weekend, then let me limit my search to next weekend.You might for organizational purposes divide events up into different types, which you give different priority in your daily work. You might for instance prioritize sponsored events over user submitted events. In your own mind, the difference is huge!The difference for the user is however not always that radical. If the user wants to know what funk concerts is happening next week, he or she does not care if it is sponsored or not. From the user’s perspective parting events into two groups does not make sense – so list them all together.",
	"url": "https://ui-patterns.com/patterns/EventCalendar"
	},
	{
		"pattern_id": "52",
		"pattern": "Thumbnail",
		"pattern_header": "\n    The user needs to get an overview of multiple pictures without having to download each of the full size images.\n    ",
		"pattern_usage": "\n\tUse when you have a collection of images that you want to present to the user.\n\tUse when downloading full-size versions of all of the images you want to present to the user will both take up much bandwidth but will also take a long time for the user to download.\n\tUse when you want to allow the user to browse quickly through a collection of images.\n\tUse when you want to give the user an impression of an image, movie or page before he or she decides to download the original.\n",
		"description": "The user needs to get an overview of multiple pictures without having to download each of the full size images.A thumbnail is a miniature version of a larger picture. The thumbnail can illustrate anything graphical: a picture, movie or even a screenshot of a webpage.The dimensions (width and height) of multiple thumbnails appearing next to each other are the exact same. In order to preserve the same proportions in the thumbnail image as were found in the original image, both resizing and cropping is part of the image manipulation process.Common thumbnail sizes are:Using thumbnails provides the user with an overview of several images or movies in the space of one web page. Furthermore, thumbnails save bandwidth as the user does not have to click through all images to find the one he or she is looking for, but can be guided by the previews provided by the thumbnails.",
		"url": "https://ui-patterns.com/patterns/Thumbnail"
	},
	{
		"pattern_id": "53",
		"pattern": "Favorites",
		"pattern_header": "\n    The user wants to pick out items for later consumption\n    ",
		"pattern_usage": "\n\tUse to enable users to differentiate between large amounts of content items.\n\tDo not use favorites to pick out multiple categories – use tags or categories instead.\n",
		"description": "\n  Alternate titles:\n  Bookmarks,  Starred,  Wish List.\nThe user wants to pick out items for later consumption▲ At Pinterest.com, you can save "pins" in collection for later consumption.Let users curate a personalized list of favorite items.Provide a way for users to save items of particular interest for curation or later consumption. Consider allowing tagging or adding descriptions or other metadata to help users recall items later.Provide a favorite button, juxtaposed to items in a list view or placed within a detail view. The button usually takes the shape of a star or heart. Additionally, consider providing a list of items that the user has favored.Choosing to favorite content is an on/off choice. This pattern does not allow associating meta-data to the favorite or in other ways categorizing the content.This pattern focuses on personal organization rather than promoting content. It allows users to either publicly or privately pick out content, anywhere in the product, that they might want to come back to later. Contrary to liking or sharing, which tends to get lost in activity streams, favorites can be used to mark content to read later or which might come in handy again.Favorites can help users create sense in overwhelming sets of data and let aspiring users borrow sense from those they look up to.Assigning “favorite” status is a quick way of discerning preferred content from regular content.1 Favorites design pattern from the Android interaction patterns library",
		"url": "https://ui-patterns.com/patterns/favorites"
	},
	{
		"pattern_id": "54",
		"pattern": "Tag Cloud",
		"pattern_header": "\n    The user wants to browse content by popularity in a visually appealing way.\n    ",
		"pattern_usage": "\n\tUse when users of your website can add content and tags themselves.\n\tUse when your website has more than 10-20 different tags, each with different weight in post-count.\n\tDo not use to show the categories of a strict hierarchical structure\n",
		"description": "The user wants to browse content by popularity in a visually appealing way.A tag cloud is a list of tags, where the font size of each tag is larger or bigger depending on its weight. Weight in tag clouds can be represented in three different ways:There are several opinions on how tags should be ordered. Examples of ways to order tags are:Tag clouds helps visualize semantic fields; how some categories have greater importance than others.It can also help give an impression of what content is to be found on a site and which categories of content the site is focused on.1 Tag clouds at wikipedia",
		"url": "https://ui-patterns.com/patterns/TagCloud"
	},
	{
		"pattern_id": "55",
		"pattern": "Pull to refresh",
		"pattern_header": "\n    The user wants to to retrieve more data or refresh already available contents on the screen.\n    ",
		"pattern_usage": "\n\tUse to refresh or update any updatable content such as lists, grid lists, and card collections that are sorted in reverse chronological order (a collection is strictly sorted by descending date). Examples:\n\t\n\t\tContent feeds (Twitter, RSS)\n\t\tInboxes (emails, text messages)\n\t\n\tUse pull to refresh to refresh the entire page or widget. Example:\n\t\n\t\tTab in browser (Google Chrome)\n\t\n\tUse when designing for touch screens.\n",
		"description": "\n  Alternate titles:\n  Swipe to refresh.\nThe user wants to to retrieve more data or refresh already available contents on the screen.▲ Once user has scrolled to the top of the stream of tweets, they can scroll a little further to refresh the stream.As the user pulls down on the screen with a finger, visual feedback (refresh indicator) appears at the top of the list showing a progress of content update. If the user releases before reaching the refresh threshold, the refresh aborts and visual feedback disappears.A user’s wait time begins the moment he initiates an action (swipe the screen for content update). Immediately after that, the application should provide a visual feedback in order to communicate that it has received the request. The user’s confidence in the fact that the refresh is happening, is directly correlated to the visual feedback. You will want to let your refresh indicator continue spinning until data is loading in order to engage the user and prevent confusion.Refreshing content should only be triggered manually by user why the refresh indicator should appear only in conjunction with a refresh gesture. If you do want to notify users about automatically updating content (syncing), you should refrain from using the same indicator.Refresh indicators act as intermediaries between different states of the view, helping users to understand what is going on as the screen changes. Refresh indicators should remain visible until the refresh activity completes and any new content is visible, or the user navigates away from the screen.Pull to refresh are sometimes considered as an extra unnecessary step to refresh, as the user has to manually trigger refreshing or the loading content process of the application. As the pull-to-refresh gesture signifies a manual request for updates, it requires a user involvement into the process and creates a superficial layer between users and their content.In most cases such kind of operations can be performed automatically using auto-sync procedure, without user involvement. For example, when users use Gmail in the browser on their desktops the service show them the latest emails automatically (and keeps the inbox up-to-date in the background). So why would email clients on mobile devices act differently?Manual refreshing do provide benefits for the user interface, and can act as a great supplement to syncing:Using the Pull-to-refresh pattern helps the user perform a content update task, but this pattern isn’t universally applicable and has its own downsides.Many developers consider using ‘pull-to-refresh’ as a way to save space on screen (remove UI clutter). While it obviously saves screen estate (nothing is visible on screen at all), users have to know it’s there. Gestures are hidden controls. Thus, it’s not as intuitive as a visible “Refresh” button. A visible refresh button is easier to implement for developer and to use for user (since it’s always visible and available).You might want to consider a refresh button…Consider no refresh button (or auto-refresh in addition to a button) whenever the things are changing too fast (refreshed becomes stale within a minute or less). Examples:Pull-to-refresh feels natural on a mobile device, but it looks kind of odd on the iPad (especially in landscape mode). It’s almost impossible to update the content using one-thumb interaction — you need either stretch your thumb or put the device on a flat surface in order to comfortably operate with user interface.In the Google Chrome app, the functionality of the pull to refresh interaction has been expanded with the ability to perform two other actions — open a new tab or close the current tab. Like the standard pull-to-refresh design pattern, pulling down on the screen and then letting it go will just refresh the screen:However, when user pulls down and swipe right, Chrome will close the current tab. Alternatively, swiping left will open a new tab. This augmented pull-to-refresh interaction gives users three possible actions to choose from, instead of just one. Opening a new tab with the augmented pull-to-refresh interaction is much more efficient since it can be done with just one smooth gesture.1 Why the pull to refresh gesture must die by Austin Carr2 Pull to refresh via Wikipedia3 Swipe to refresh via Material design4 Loren Brichter Talks About Pull-To-Refresh Patent and Design Process by Graham Spencer5 Augmented Pull to refresh by Jacob Gube",
		"url": "https://ui-patterns.com/patterns/pull-to-refresh"
	},
	{
		"pattern_id": "56",
		"pattern": "Sort By Column",
		"pattern_header": "\n    The user needs to be able to sort the data in a table according to the values of a column.\n    ",
		"pattern_usage": "\n\tUse when there are many rows in table (above 10), and it is difficult to single out one row and its relation to other rows\n\tUse when the table uses pagination and data spans multiple pages.\n\tUse when you want to be able to compare rows in a table – for instance numbers.\n\tDo not use if the amount of rows are few and the table is easy to search or scan.\n",
		"description": "The user needs to be able to sort the data in a table according to the values of a column.Extend the table functionality so that each column table heading is a link. When the heading is clicked, the rows in the table are ordered ascending by the specific column’s values. If the same label heading is clicked again, the order is reversed: the rows in the table are ordered descending by the specific column’s values.When the rows of a table have been sorted by a specific column, an arrow is often displayed beside the column’s heading indicating the direction the rows have been sorted in. The column’s heading is often presented in another font color or font weight (bold / regular) to indicate ordering has been performed.The pattern provides an easy way to organize and compare data in a table. Furthermore, the pattern is also well known from desktop applications dealing with rows of data.",
		"url": "https://ui-patterns.com/patterns/SortByColumn"
	},
	{
		"pattern_id": "57",
		"pattern": "Alternating Row Colors",
		"pattern_header": "\n    The user needs to visually separate similar looking rows in a table apart, in order to match the values of each row.\n    ",
		"pattern_usage": "\n\tUse when you have several columns in a table\n\tUse when the content of each column is often of similar nature\n\tUse when there are multiple lines for each row\n\tUse when the height of each row varies\n",
		"description": "\n  Alternate titles:\n  Striped tables, Zebra striping.\nThe user needs to visually separate similar looking rows in a table apart, in order to match the values of each row.To differentiate table rows from each other, a different shade is used as background color for every second row. Keep the difference between the two colors to a minimum to preserve a gentle feeling. The colors should be similar in value and low in saturation – the one should be slightly darker or lighter than the other. It is often seen that one of the two colors is the background color of the page itself.The purpose of the shading in every second row is only to provide an visual aid for the every  users to follow a row from the left to the right and back again – without confusing one row with another. The purpose is not to drastically change the design of the table.A side effect of shading every second row with an alternating color is however that the table will stand out from the rest of the page. The shading in this way boxes in the table.",
		"url": "https://ui-patterns.com/patterns/AlternatingRowColors"
	},
	{
		"pattern_id": "58",
		"pattern": "Table Filter",
		"pattern_header": "\n    The user needs to categorical filter the data displayed in tables by the columns.\n    ",
		"pattern_usage": "\n\tUse when you have a very large data set of results that is too large to show in one page\n\tUse when one or more table columns can easily be summarized into categories to filter by.\n",
		"description": "The user needs to categorical filter the data displayed in tables by the columns.Provide dropdown inputs that present the categories by which the user can filter the data set by. Once the user selects a category and clicks “Filter” or something similar (when the user submits the form), only the row that belong to the selected category are displayed.Optionally, multiple filters can be added. If this solution is chosen, you must be aware to update the categories of each dropdown box accordingly when one category is selected – as the selecting values in one category might reduce the options left in another.Adding filters to your tables lets the user reduce the amount of items shown. Filters help narrow down search results, letting the user find more accurate results.",
		"url": "https://ui-patterns.com/patterns/TableFilter"
	},
	{
		"pattern_id": "59",
		"pattern": "Frequently Asked Questions (FAQ)",
		"pattern_header": "\n    The user has questions concerning a site and its related services\n    ",
		"pattern_usage": "\n\tUse when users typically has the same concerns and questions about a service.\n\tUse to collect answers to common questions from your support department or other type of feedback mechanism.\n",
		"description": "\n  Alternate titles:\n  Service Center, Help Center.\nThe user has questions concerning a site and its related services▲ Dropbox has categorized their FAQ into sections, which each has their own associated icon.A collection of 60 User Interface design patterns, presented in a manner easily referenced and used as a brainstorming tool.Provide a space where users can get answers to common questions.Organize Frequently Asked Questions (FAQ) into a separate and routinely maintained section on your site. Keep questions short, limited, scannable, searchable, and well organized using the language of your users. Allow users to quickly assess whether an answer applies to their particular situation and provide clear actions to get started with a solution.When it comes to FAQ pages, your ultimate goal is to let users find the information they are looking for as easily and quickly as possible. Your main design goal is to present its content in the most efficient and effective way possible. Information comes first – don’t let design decisions overshadow content.The longer your FAQ page is, the more attention you need toward making it easy for users to find the answers they are looking for. There are several tools available:A good tool to help you find a user-centered categorization is through card sorting2. Card sorting will help design and evaluate your information architecture by letting users organize topics into categories that makes sense for them as well as labelling them.If a user can’t find the answer to their question within your FAQ, it’s likely they will want to ask you directly. Provide a way to let them ask a free-form text question and be sure to be able to answer them quickly.Most people search for their answer through search engines like Google. Design each answer page so that you include enough context as if it was a landing page. Align words and phrases used in the answer with what people might search for on Google. Reassure users that they’ve landed on the right page that will help them get answers to their question: place keywords that will trigger users to read more as they first scan the page.1 FAQ Pages: Best Practices and Examples by Cameron Chapman2 Card Sorting at Usability.gov",
		"url": "https://ui-patterns.com/patterns/frequently-asked-questions-faq"
	},
	{
		"pattern_id": "60",
		"pattern": "Dashboard",
		"pattern_header": "\n    The user wants to digest data from mulitple sources at a glance\n    ",
		"pattern_usage": "\n\tUse when you want to provide a high-level overview of data that allows to discover actionable trends\n",
		"description": "\n  Alternate titles:\n  Cockpit.\nThe user wants to digest data from mulitple sources at a glance▲ CNN Money groups related data together into their dashboard to establish connections between multiple data points. All data is related around the title and linked via subtitles.A collection of 60 User Interface design patterns, presented in a manner easily referenced and used as a brainstorming tool.Provide real-time insight into the current state of the most important metrics of a system.Design the dashboard around a single goal and ruthlessly prioritize the data you put into it around that goal.There are 3 common types of dashboard, each designed for its own specific purpose.Some types of users might need either one of these kind of dashboards, or even two. When possible, try to separate dashboards into multiple views, each with their own purpose.Enable users to make instantaneous and informed decisions at a glance by letting them monitor the major functions of a system efficiently. Indicate what items require urgent attention at the top and move less critical statistics to the bottom. A good dashboard is simple, communicates well, has a minimum of distractions, tries not to confuse, and presents information visually so it is easily perceived.1 Four Cognitive Design Guidelines for Effective Information Dashboards by Shilpi Choudhury2 Designing and Building Great Dashboards – 6 Golden Rules to Successful Dashboard Design by Nick Smith",
		"url": "https://ui-patterns.com/patterns/dashboard"
	},
	{
		"pattern_id": "61",
		"pattern": "Copy Box",
		"pattern_header": "\n    Users need to easily view and copy preformatted text.\n    ",
		"pattern_usage": "\n\tUse when you want to display formatted text, which can be easily copied without losing its formatting\n\tUse when need to display mono space demo code.\n\tUse when you wish to present information that the user needs to can copy (and later paste into another application)\n",
		"description": "Users need to easily view and copy preformatted text.Create a box that has its own style in regards font color, font style, and background color that distinguishes itself from the rest of the page.To preserve indentation and general formatting of the text box so that it looks like a terminal window or text editor, use a mono-space font: a font that has a fixed width typeface (glyphs have the same width).As inserting text in raw HTML renders without line breaks and strips repeating spaces, you need to put special tags around the text you want to preserve the original formatting with. One solution is to use the <pre> around the text you want to preserve formatting with – another is to put the text inside a <textarea>.If you just paste ascii formatted text into a HTML file, the user’s browser will format the text and display it all in one line and regardless of how the code looks like in the HTML file as special tags are used in HTML to define line breaks (<br>).",
		"url": "https://ui-patterns.com/patterns/CopyBox"
	},
	{
		"pattern_id": "62",
		"pattern": "Gallery",
		"pattern_header": "\n    The user needs to browse a collection of high quality images \n    ",
		"pattern_usage": "\n\tUse when the user needs to browse through a series of images in a sequential way.\n\tUse to enforce a sense of beginning and end.\n\tUse when the user would like as much screen real estate as possible reserved for displaying images in high resolution.\n\tDo not use when the purpose is to give the user a quick overview of multiple images at one time\n",
		"description": "\n  Alternate titles:\n  Slideshow.\nThe user needs to browse a collection of high quality images ▲ When you browse to the end of this gallery at ing.dk, an overlay appears to let you share the story on facebook - or take you onwards to other stories. Much like the screen with related videos that appears at the end of youtube videos.A gallery consists of multiple images that can be browsed one by one by navigating between them. Only one image is viewed at a time. Often, several different options for navigating the gallery is provided in order to accommodate  several different browsing behaviors of the different kinds of users browsing the gallery. It is common for a gallery to display the context the current image image being views as in “Image 2 out of 18 images”, the shorter “2 out of 18”, or merely “2/18”.Thumbnails allow the user to find out where he or she is in the gallery: the context of the current image. Thumbnails also provide a great way to keep the user in the flow of going to the next image; if the image seems interesting in thumbnail mode it might be worth a click from the user’s perspective.Listing the gallery images as numbers allows for quick navigation. Highlight the current image to let the user know where he or she is in the gallery: the context of the current image.Galleries (or slideshows) work in one of two ways: either they switch automatically from image to image after a set time interval, or buttons and other navigation elements are provided to let the user browse through images manually. Some galleries provide pause buttons and thus provides a mix between the two.Newer galleries tend to be based on javascript where only the image, its context, captions, and comments are changed as opposed to having a complete page reload each time the user browses to a new image. This javascript way of browsing allows for much quicker navigation between images and provides a much more smooth and pleasing experience from the users perspective.Galleries have been heavily used by media sites relying on banner impressions for a living to get as many pageviews out of the user as possible. A gallery with 20 images that shows in separate page views yields a much bigger returns in banner impressions than having an article with 20 images beneath each other. However, as the javascript galleries, where only part of the page is reloaded, becomes increasingly more popular, the days of the gallery with separate page loads seems more and more outdated. If you are still aiming for as many banner impressions as possible, consider having the banners change as well for every time the user browses to a new image.1 Slideshows In Web Design: When And How To Use Them by Matt Cronin at smashingmagazine.com",
		"url": "https://ui-patterns.com/patterns/Gallery"
	},
	{
		"pattern_id": "63",
		"pattern": "Image Zoom",
		"pattern_header": "\n    The user wants to zoom in on an image to view the details in a higher image resolution.\n    ",
		"pattern_usage": "\n\tUse when the normal image size displayed is not in high enough resolution to for the user to grasp the details in the image.\n\tUse when downloading full-sized and detailed versions of a all images takes up more bandwidth than you’re interested in sharing.\n\tUse when showing a full-sized and detailed version of an image does not fit into the website’s design.\n\tUse when showing a full-sized and detailed version of an image will prevent the user from getting an overview of the picture.\n\tUse when downloading a full-sized and detailed version of every image will take a disproportionate amount of download time for the user compared to the provided value. Only show images in high resolution when they are requested as all images might not be of equal interested to the user.\n",
		"description": "\n  Alternate titles:\n  Magnify image.\nThe user wants to zoom in on an image to view the details in a higher image resolution.▲ In the apple.com online shop, selected products are shown with a zoom feature, that allows you to zoom in on the product image to view its details in greater resolution.Provide a mechanism that allows the user to zoom an image to view its details.From a server point of of view, an important goal is not to pre-load high resolution images before they are requested. This will help save bandwidth.An intuitive way of doing this is to allow the user to click a spot on a given image. As the user clicks the image to zoom, a higher resolution image is preloaded.Provide graphics or text about zooming in on the image; a bare image will not suggest zoom functionality to the user in itself.Allowing the user to zoom in on an image permits exploration of the image’s details. Depending on the zoom factor, showing the entire high resolution image from the beginning will not provide the user with an overview of the entire image thus removing the context of the details viewed.By providing a zoom functionality, a user can zoom into just one area of the image that he or she is interested in. In this way, the user is not bothered by the other details.",
		"url": "https://ui-patterns.com/patterns/ImageZoom"
	},
	{
		"pattern_id": "64",
		"pattern": "Slideshow",
		"pattern_header": "\n    A collection of media needs to be displayed in a presentation as a sequence of still images. \n    ",
		"pattern_usage": "\n\tUse when you need to capture attention using multiple stories and minimize screen real estate.\n\tUse when you need to direct users’ attention toward stories that you have highlighted\n\tUse when you want to allow users to skim through several stories without scrolling, doing any other mouse movements, or using any other input devices.\n\tDo not use if you want users to view all stories at the same time.\n\tBeware of over-usage and combination with other animations, which can lead to making a website seem too busy and attention-demanding.\n",
		"description": "A collection of media needs to be displayed in a presentation as a sequence of still images. ▲ Stylistic thick border frontpage carousel.A slideshow shows several stories with images, one at a time. After a specific time interval one story is replaced by another – often with an animated transition.Transitions between images are most often a sliding effect although a simple fade is also a popular choice. The most important design choice when it comes to transitions is to make it seem natural. Animations should never be used for showing off; only to support the usability and understandability of UI.Use numbers, bullets, squares, or thumbnails to represent all the images in the slideshow. These provide a visual mechanism for navigation and serve as indicators for slides seen and slides still remaining to be seen. Numbers, bullets, and thumbnails help set expectations of what is to come.Use numbers if it’s important to let the user now exactly how many stories a slideshow has. Use bullets if it doesn’t matter, and thumbnails if you want to inspire the user to jump past the sequential order of stories that you’ve chosen beforehand.Slideshows steal attention! Especially if they are combined with animated transitions. Put slideshows together with blinking advertisement and other bright, animated or otherwise attention-stealing elements on the page and you have mayhem. If more than one element screams for attention, the user will get lost. If you have multiple elements that scream for attention other than the slideshow, the slideshow will only help diffuse users’ attention instead of focusing it.Consider whether your slideshow is going to represent the main and most important stories of your site – if it doesn’t, then leave out the slideshow. A slideshow directs attention towards itself. Don’t overdo it.Increase the effectiveness of your slideshow by adding buttons for each story that calls out for attention. Buttons help users know what to click. However, be careful not to fall in the common trap of just labelling your button with “Read more”, unless that is really the only action the user can do by clicking on that button. Texts like “Support”, “Donate”, “Buy”, and “Watch video” are much more effective in getting users to click and set expectations of what they will get.Common navigation elements include:In order not to present the user with too many options at first, consider hiding navigational elements (such as “previous” and “next” buttons) until users hover the slideshow image. Too many options at first can confuse users and make them go away before they even got started. Reveal their options as their interest is sparked.Slideshows usually fall into one of the following categories:Slideshows highlight several different stories on the same screen real estate. They allow users to quickly skim through stories. Slideshows capture the user’s attention and retain attention with simple navigation, captivating content and calls to action. They focus users’ attention sharply on the content instead of interacting with the browser.1 Slideshows In Web Design: When And How To Use Them by Matt Cronin at smashingmagazine.com",
		"url": "https://ui-patterns.com/patterns/Slideshow"
	},
	{
		"pattern_id": "65",
		"pattern": "Autocomplete",
		"pattern_header": "\n    The user needs recognition aided search when performing search tasks that are difficult to remember or easily mistyped.\n    ",
		"pattern_usage": "\n\tUse to assist with ambiguity-issues, when an item can be entered in multiple ways\n\tUse when the type of information entered can readily be matched with a specific piece of information in the system. E.g. A user may not recall how to spell “Amorphous” but is able to input the first 3 letters and find the word from the autocomplete list.\n\tUse when autocomplete suggestions can be pulled from a set of data that is manageable in size.\n\tUse when input speed is an important goal\n\tUse when input accuracy is an important goal\n\tUse when the number of items would be too large or inconvenient to display in a standard drop down box.\n\tDo not use if you want to provide the user an overview of all options available.\n",
		"description": "\n  Alternate titles:\n  Auto Suggest.\nThe user needs recognition aided search when performing search tasks that are difficult to remember or easily mistyped.▲ Classic autocomplete suggestions at google.comA collection of 60 User Interface design patterns, presented in a manner easily referenced and used as a brainstorming tool.Suggest possible matches for a search as users are typing.The Autocomplete pattern is a predictive, recognition based mechanism used to assist users when searching. An autocomplete search field presents items which match the users input as they type. As the user types in more text into the search field, the list of matching items is narrowed down.The list of matching items must allow users to select items using input devices such as keyboard arrow navigation, touch and mouse click. This allows the user to quickly select the term without having to type out the entire term. The patterns name comes from the notion that the system completes your search. Limit the number of matching items to display when working with large dataset. A standard limit is 10 matching items.Find a maximum number of matching items to display when the matching data set is in the hundreds, thousands, or millions. A standard limit seems to be to present a maximum 10 matching items.Order matching items by relevance with the most relevant or likely match at the top of the list. This will allow the user to quickly select his or her match.Some autocomplete implementations group matching items into categories. On apple.com for instance, matches are organized by groups.The autocomplete pattern is used in combination with a standard input text box that is labelled to match the user’s expectation of what field will be searched against1.As the user types in data, a list of suggested items that match the inputted data is displayed. As more text is inputted, the displayed list is updated to matching the updated query – narrowing down matching items.The list of suggested items is most often displayed directly beneath the input text box and has a width that matches the width of the text box.It may be appropriate to highlight what part of a suggested item that matches what has been inputted. Example: “Amorphous”.Allow the user to cancel the suggested items list by pressing the ESC key. Pressing the ESC key causes the suggested items list to close, however typing in more characters after pressing the ESC key will restart the autocompletion behaviour.The Autocomplete pattern allows faster input, reduces the number of keystrokes needed, prevents typing errors, and provides feedback on the validity of what is being entered. It also allows designers to include longer lists for users to choose from without taking up extra screen real estate.Autocompletion and search suggestions save the user keystrokes by matching a user’s query with potential matches that are displayed as the query is being typed.It reduces the number of keystrokes and thus allows for faster data input. Tiresome, long, and complicated queries such as email addresses or airport names, can be found and selected with only a few keystrokes.Additional formatting of a search suggestion can help remove ambiguity. If I am searching for an airport in London, extra formatting can tell me whether I am selecting Heathrow or Standsted airports.Autocompletion provides a feedback loop that continually lets the user narrow in on the correct choice.The cognitive burden of remembering an exact text-phrase is made easier, as the user can use the autocomplete pattern to only type in details that he or she remembers. If a user is searching for an email that he can only remember the domain name of, he or she can simply enter the domain name where-after all emails with that domain name is presented for selection.The autocomplete pattern relies on the principle of recognition over recall. Instead of having to recall a full and exact text query, the user can start typing in parts of the query he or she recalls, and in turn rely on recognition to select the best match.When matching on large sets of data, it is critical for the matches presented to be close to what the user is looking for.Google solves this problem by ranking matches by the amount of times each query has been searched for. Apple solves the problem in Spotlight (a desktop application for searching items on the computer) by ranking matching items by the amount of times an item has been selected when that exact query was entered.1 Autocomplete design pattern at Yahoo Design Pattern Library.2 Autocomplete design pattern by Martijn van Welie.",
		"url": "https://ui-patterns.com/patterns/Autocomplete"
	},
	{
		"pattern_id": "66",
		"pattern": "Search Filters",
		"pattern_header": "\n    The users needs to conduct a search using contextual filters that narrow the search results.\n    ",
		"pattern_usage": "\n\tUse when the search results for a query are very numerous and reviewing them would be very time consuming.\n\tUse when search results can be categorized into filters: the search must be contextual.\n\tDo not use when your search is not easily categorized into filters.\n",
		"description": "\n  Alternate titles:\n  Live Filters, Refining Search.\nThe users needs to conduct a search using contextual filters that narrow the search results.▲ Volkswagen lets you refine your search through various search filters.Refine search results in real time using one or more filters.Present everything available, and then encourage the user to progressively remove what they do not need by applying one or more filters. With immediate feedback, the experience is used from a monologue to a conversation. Only use this pattern when it helps simplify the search experience.Present the user with a list filter categories, and let the user filter these by inserting input in text boxes, choosing options in dropdown boxes or even through checkboxes or radiobuttons. Whenever the user makes a change to any of the input fields, the results are automatically updated.With a search, you start off with nothing and potentially end up with nothing. Counter to this approach is filtering, where we present everything available, and then encourage the user to progressively remove what they do not need1. – Pete FordeUsing the live filter pattern moves the search from a monologue to a conversation. The user can progressively remove what they don’t need step by step and receive feedback immediately.When you weigh your decision to use this filter, consider whether the pattern complicates or simplifies search. If it does anything else than simplify finding the correct search result, choose another solution.1 Live Filter by Pete Forde",
		"url": "https://ui-patterns.com/patterns/LiveFilter"
	},
	{
		"pattern_id": "67",
		"pattern": "Collectible Achievements",
		"pattern_header": "\n    Some users respond to opportunities of winning and collecting awards that in turn can be displayed to other community members in order to increase engagement.\n    ",
		"pattern_usage": "\n\tUse when you want to make your users explore parts of your product or service that might not otherwise appeal to them.\n\tUse when you want to make your users use all parts of your product or service and in a manner you intended.\n\tUse when your users need guidance in exploring your offerings.\n\tUse when you would like to promote certain parts of your product or service.\n\tUse when you would like to focus the user’s attention to certain parts of your product or service – for instance in the occasion of an event.\n\tUse when you would like to give your users an opportunity to achieve a sense status and accomplishment within a community.\n\tUse when you would like to give your users an opportunity to differentiate themselves from the community or integrate more with the community.\n",
		"description": "\n  Alternate titles:\n  Badges,  Trophies, Achievements, Accomplishments.\nSome users respond to opportunities of winning and collecting awards that in turn can be displayed to other community members in order to increase engagement.▲ At MapMyRun.com, you can enter challenges. As you progress, you are awarded badges to keep you motivated to carry on.A collection of 60 User Interface design patterns, presented in a manner easily referenced and used as a brainstorming tool.Reward users for certain kinds of behavior, for reaching specifically defined goals within the communitySome users respond to opportunities of winning, earning, and collecting awards that can be displayed to other community members. Construct a consistent family of collectibles that is achieved through mastering a healthy mix of difficulties. Unlock new achievements as easier ones are accomplished.Let your users specialize in certain types of behavior and show it off to fellow community members. If there are too many users for a single top 10 of the entire site, then create multiple top 10 lists that celebrates different specialities.If you’re running a photography website and are rewarding users for uploading great photographs, consider creating specialized awards for different types of photographs instead of just having a best-of-the-best award. It takes different sets of skills to respectively create a great portrait shot and a great action shot. So why not just reward each type?Similarly you could award users with a series of different awards focusing on giving feedback: “Best comment in this month”, “Highest rated reply in this month”, or “Elite reviewer”.The Yahoo Design Pattern Library talks about “fetishizing” the awards1. Users should strive to receive a trophy, badge, or achievement – both because it is a challenge to be awarded, but also because it just looks great!Give people something to drool over; let people know what can be won. Let them know what are available for them, what they have to unlock, and what they have achieved already.Attractive awards work better. Develop attractive trophies with beautifully designed icons. Some games use actual ‘game-pieces’ to represent each achievement.Users should be proud to show their awards off. They should be proud to put them on display and be able to play around with their “show room”. If there are enough achievements to play with, you can enhance the user’s experience by letting him or her customize his or her “show room”.Make some achievements very easy to accomplish, so that the user won’t loose momentum. Combine these with harder challenges that require more time and effort to achieve.In games, it is often seen that new achievements are “unlocked” as easier ones are accomplished. Being awarded an achievement that is not readily obtained by a newcomer adds to the user’s feeling of status in- and belonging to the community.There are several types of achievements to reward your users with:What is your website about? And what object are you awarding? Are you awarding the user’s actions or his or her creations? Are you awarding the user or his or her objects?At amazon.com and ebay.com, awards are used to indicate the trustworthiness of a user giving a review, selling or buying. At the Danish car-website vmax.dk, it is each car that can be awarded and not in particular the user. The owner of each car then gets to display his or her achievements for cars owned.Achievements reflect a user’s reputation in a community. They are “both a history of one’s actions within that community, and a value judgment about the worth of those actions”2.Collectible achievements gives the user a feeling of ownership and belonging. It gives the user an opportunity to build an online presence that can be shown and admired by fellow community members – thus providing a sense of status in the community.As the user collects achievements, he or she invests time in the community and builds up a history. This history with your site creates a barrier for the user to leaving, as what has been built up will be lost upon quitting. Translating the investment into visible collectible achievements helps the user to build and emotional bond the community that will reward you plentifully in traffic and loyalty.To be awarded with an achievement the user must complete a series of tasks that defines the criteria of success. But how do you define a successful completion of a task?Enforce some notion of quality in what it takes to complete a task. In games it could be to earn 1000 credits within 20 seconds, or to have conducted a certain action in a specific number of locations.Award quality participation over repetitive activity1. Rather than rewarding for the 20th time a game has been played, reward for the 20th time a game has been won within one month.A well-designed reputation system links the services that you offer your users to a set of goals that you have for your community2. Are the achievements you are giving out rewarding the behavior you want – does it reward users for behaving like good citizens or just to keep activity going? Promoting poor quality activities will slowly kill your community8.When you design your “Collectible Achievements” and how they work, be careful that you design them in line with the mindset of your community. Is your community collaborate rather than competitive? Do you want to promote some behavior over other? Who in your community will be intrigued by your the achievements you offer and start collecting? Are you promoting the right behavior or could your achievements actually end up promoting anti-social behavior (or is that what you want?)? Will you possibly push parts of your community away (is that OK?)?The design of your achievement system is closely related to defining what is “good” and “bad” behavior in your community. By defining that an achievement is worth “10 points” and another is worth “20 points”, you have quantified and defined what is better behavior. If you neglect to reward certain behavior, that behavior is inherently defined as “bad”.Keep track of how your community reacts to the system of achievements you setup. Are they used and achieved in the manor you intended? A community needs constant nurturing and fixing – the specifications of each achievement are easy knobs to use to adjust and fix.To encourage people to try new and novel features you can reward users for their “first” achievements. For instance: “First video uploaded”, “First contributed document”, or “First review submitted”. Such achievements should however be worth less than more challenging goals.Can the achievement be taken away if your score goes down? Or do you want to keep it time specific? (For instance: Best seller in august 2009)In prospect theory, it is found that people have a tendency to strongly prefer avoiding losses to acquiring gains. They are loss aversive7. Having built up a lot of achievements in a community gives the user a history with that site and creates a barrier to leaving: too much have been built up. A sense of belonging have been emotionally attached to the achievements.In large systems where it is impossible to monitor the activities of all users, it can be a good idea to implement a “report abuse” feature, so that members of the community can rat each other out, if they feel that somebody is manipulating the system in a malicious way.Communities are all about feeling respected by fellow community members and the system as well. It’s about fairness. Unfortunately, fairness is a hard factor to build into a system built upon bits and bytes.1 Collectible Achievements fromt he Yahoo Design Pattern Libary.2 Social Design Patterns for Reputation Systems: An Interview with Yahooâ€™s Bryce Glass by Joshua Porter.3 Social Design Patterns for Reputation Systems: An Interview with Yahooâ€™s Bryce Glass by Joshua Porter.4 Social Gaming Summit panel writeups by Jeremy Liew.5 How to design a reputation system for your social media site or social game by Jeremy Liew.6 Addicted to Achievements? from the GamerScoreBlog.com7 Loss Aversion from wikipedia.org8 I Love My Chicken Wire Mommy by Ben Brown9 Designing Your Reputation System by Bryce Glass",
		"url": "https://ui-patterns.com/patterns/CollectibleAchievements"
	},